<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="hist_spec_files/filelist.xml">
<title>hist_spec</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2004-06-04T23:26:00Z</o:Created>
  <o:LastSaved>2004-10-20T00:01:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>542</o:Words>
  <o:Characters>3094</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>25</o:Lines>
  <o:Paragraphs>7</o:Paragraphs>
  <o:CharactersWithSpaces>3629</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(167);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fhist_spec.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>hist_spec</span> - performs histogram specification on an image</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>     </span>#include &quot;<span
class=SpellE>histogram.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>Image *<span
class=SpellE>hist_<span class=GramE>spec</span></span><span class=GramE>(</span>Image *<span
class=SpellE>imageP</span>, <span class=SpellE>int</span> mode, char **input);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>imageP</span></span>&gt; - pointer to the input Image structure.<span style='mso-spacerun:yes'>  </span><span
class=GramE>The<span style='mso-spacerun:yes'>  </span>data</span></pre><pre><span style='mso-spacerun:yes'>               </span><span
class=GramE>type</span> of the image must be CVIP_BYTE or remapped to</pre><pre><span style='mso-spacerun:yes'>               </span>CVIP_BYTE;</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>mode</span>&gt; - if mode = 1, interactively get the histogram</pre><pre><span style='mso-spacerun:yes'>               </span><span
class=GramE>if</span> mode = 0, the histogram is specified by input;</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>input</span>&gt; - expressions for the specified histogram</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'>   </span>Image *<span
class=SpellE>histogram_<span class=GramE>spec</span></span><span class=GramE>(</span>Image* <span
class=SpellE>imageP</span>, float **histogram);</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>imageP</span></span>&gt; - pointer to the input Image structure;</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>histogram</span>&gt; - the specified histogram</pre><pre><o:p>&nbsp;</o:p></pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$<span class=SpellE>CVIPtoolsHOME\CVIPC\HISTOGRAM\histogram.c</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>The <span class=SpellE>histogram_<span
class=GramE>spec</span></span><span class=GramE>(</span>) function performs a histogram<span style='mso-spacerun:yes'>  </span><span
class=SpellE>specifi</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>cation</span></span> on an image pointer Image* using the histogram <span
class=SpellE>speci</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>fied</span></span> in the pointer to pointer to float<span style='mso-spacerun:yes'>  </span><span
class=SpellE>float</span>**<span style='mso-spacerun:yes'>  </span>passed<span style='mso-spacerun:yes'>  </span>to</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> function.<span style='mso-spacerun:yes'>  </span>The specified histogram is computed by <span
class=SpellE>calcu</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>lating</span></span> the cumulative <span
class=SpellE>distrubution</span> function of both the <span class=SpellE>ori</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>ginal</span></span><span class=GramE><span style='mso-spacerun:yes'>  </span>histogram</span> and the desired histogram.<span style='mso-spacerun:yes'>  </span>The <span
class=SpellE>cdf</span> for the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>original</span> histogram is then mapped to the<span style='mso-spacerun:yes'>  </span>desired<span style='mso-spacerun:yes'>  </span>histogram</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>using<span style='mso-spacerun:yes'>  </span>the</span> inverse <span
class=SpellE>cdf</span>.<span style='mso-spacerun:yes'>  </span>If Pr(x) is the original histogram,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>and</span> <span class=SpellE>Pz</span>(x) is the desired histogram, then<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span><span
class=SpellE>cdf</span>[Pr(x)]<span style='mso-spacerun:yes'>  </span>=</pre><pre><span style='mso-spacerun:yes'>     </span>T(r) = s, and <span
class=SpellE><span class=GramE>cdf</span></span><span class=GramE>[</span><span
class=SpellE>Pz</span>(x)] = G(z) = v.<span style='mso-spacerun:yes'>  </span>The inverse of this is</pre><pre><span style='mso-spacerun:yes'>     </span>z = <span
class=GramE>inv[</span>G(v)].<span style='mso-spacerun:yes'>  </span>Therefore z = <span
class=GramE>inv[</span>G(T(r))].<span style='mso-spacerun:yes'>  </span>Where r <span
class=GramE>is<span style='mso-spacerun:yes'>  </span>the</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>original<span style='mso-spacerun:yes'>  </span>grey</span>-level, and z is the new grey-level.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The <span
class=SpellE>histogram_spec</span> can perform a different <span class=GramE>specification<span style='mso-spacerun:yes'>  </span>on</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>each</span> color band in the image.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>hist_<span class=GramE>spec</span></span><span class=GramE>(</span>)<span style='mso-spacerun:yes'>   </span>is<span style='mso-spacerun:yes'>   </span>a<span style='mso-spacerun:yes'>    </span>higher<span style='mso-spacerun:yes'>    </span>level<span style='mso-spacerun:yes'>    </span>function<span style='mso-spacerun:yes'>    </span>above</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>histogram_<span class=GramE>spec</span></span><span class=GramE>(</span>).<span style='mso-spacerun:yes'>  </span><span
class=GramE>The<span style='mso-spacerun:yes'>  </span>difference</span><span style='mso-spacerun:yes'>  </span>is that <span
class=SpellE>hist_spec</span>() will</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>get</span> a mathematical formula for<span style='mso-spacerun:yes'>  </span>each<span style='mso-spacerun:yes'>  </span>band<span style='mso-spacerun:yes'>  </span>to<span style='mso-spacerun:yes'>  </span>specify<span style='mso-spacerun:yes'>  </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>desired<span style='mso-spacerun:yes'>  </span>histogram</span>,<span style='mso-spacerun:yes'>  </span>create the specified the histogram, and</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>call</span> <span class=SpellE>histogram_spec</span>(). Usually, the <span
class=GramE>user<span style='mso-spacerun:yes'>  </span>calls</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>hist_spec</span>()</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>directly</span>, and calls <span class=SpellE>histogram_spec</span>() indirectly.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span>Both functions return a valid Image pointer on success<span
class=GramE>;<span style='mso-spacerun:yes'>  </span>and</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>return</span> a NULL pointer on failure.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPtoolkit.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPdef.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPimage.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPconvert.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &quot;<span
class=SpellE>CVIPcolor.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &quot;<span
class=SpellE>CVIPhisto.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>       </span><span
class=GramE>void</span> main()</pre><pre><span style='mso-spacerun:yes'>       </span>{</pre><pre><span style='mso-spacerun:yes'>         </span>Image *<span
class=SpellE>cvipImage</span>;</pre><pre><span style='mso-spacerun:yes'>         </span>CVIP_TYPE <span
class=SpellE>data_type</span>;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span> *<span class=SpellE>inputfile</span>;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span> *<span class=SpellE>spec_func</span> = &quot;exp(0.025*x)&quot;;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span> *<span class=SpellE>funcs</span>[3];</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>setDisplay_<span class=GramE>Image</span></span><span class=GramE>(</span>&quot;picture&quot;, &quot;Default&quot;);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>        </span><span style='mso-spacerun:yes'> </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;0Enter the Input File Name: &quot;);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>inputfile</span></span> = (char *)<span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>read_Image</span>(<span
class=SpellE>inputfile</span>, 1);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, <span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>data_type</span> = <span class=SpellE>getDataType_<span
class=GramE>Image</span></span><span class=GramE>(</span><span class=SpellE>cvipImage</span>);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span>/* remap the image to CVIP_BYTE so that <span
class=SpellE>hist_spec</span> can</pre><pre><span style='mso-spacerun:yes'>            </span><span
class=GramE>be</span> used. */</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>if(</span><span class=SpellE>data_type</span> != CVIP_BYTE)</pre><pre><span style='mso-spacerun:yes'>           </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>remap_Image</span>(<span
class=SpellE>cvipImage</span>, CVIP_BYTE, 0, 255);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span>/* If you have only 1 band image, you need to pass</pre><pre><span style='mso-spacerun:yes'>            </span>'NULL' to <span
class=SpellE><span class=GramE>funcs</span></span><span class=GramE>[</span>1] and <span
class=SpellE>funcs</span>[2]. */</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>funcs</span></span><span class=GramE>[</span>0] = <span
class=SpellE>spec_func</span>;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>funcs</span></span><span class=GramE>[</span>1] = <span
class=SpellE>spec_func</span>;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>funcs</span></span><span class=GramE>[</span>2] = <span
class=SpellE>spec_func</span>;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>hist_spec</span>(<span
class=SpellE>cvipImage</span>, 0, <span class=SpellE>funcs</span>);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, &quot;output&quot;);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>free(</span><span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>       </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>    </span><span style='mso-spacerun:yes'> </span><span
class=GramE>May not work with some gif images.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>makeHistogram_Image</span><span style='mso-spacerun:yes'>     </span><span
class=SpellE>define_histogram</span>,<span style='mso-spacerun:yes'>     </span><span
class=SpellE>get_histogram</span>,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>get_histogram_Image</span>,<span style='mso-spacerun:yes'>     </span><span
class=SpellE>histogram_show</span>,<span style='mso-spacerun:yes'>     </span><span
class=SpellE>make_histogram</span>,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>showMax_histogram</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1992, 2001, 2004 SIUE - by Scott E.<span style='mso-spacerun:yes'>  </span>Umbaugh<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>David</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>Lyons and <span class=SpellE>Yansheng</span> <span class=SpellE>Wei</span>.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
