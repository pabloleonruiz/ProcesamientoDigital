<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="morphIterMod_Image_files/filelist.xml">
<title>morphIterMod_Image</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2004-06-05T00:21:00Z</o:Created>
  <o:LastSaved>2004-10-20T00:08:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>387</o:Words>
  <o:Characters>2212</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>18</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2594</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(224);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2FmorphIterMod_Image.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>morphIterMod_Image</span> - performs iterative morphological <span
class=SpellE>modif</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>ication</span></span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPimage.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPmorph.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>Image<span style='mso-spacerun:yes'>  </span>*</span><span
class=SpellE>morphIterMod_Image</span>(const<span style='mso-spacerun:yes'>  </span>Image<span style='mso-spacerun:yes'>   </span>*<span
class=SpellE>binImage</span>,<span style='mso-spacerun:yes'>   </span>const</pre><pre><span style='mso-spacerun:yes'>     </span>Matrix<span style='mso-spacerun:yes'>         </span>**<span
class=SpellE>surMATS</span>,<span style='mso-spacerun:yes'>       </span><span style='mso-spacerun:yes'> </span>CVIP_BOOLEAN<span style='mso-spacerun:yes'>        </span>(*const</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>boolFUNC</span></span>)(CVIP_BOOLEAN <span
class=SpellE>a,CVIP_BOOLEAN</span> b), <span class=SpellE>int</span> <span
class=SpellE>no_of_sur</span>, <span class=SpellE>int</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>connectedness</span>, <span class=SpellE>int</span> <span
class=SpellE>no_of_iter</span>, <span class=SpellE>int</span> f)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>binImage</span>&gt; - pointer to Image structure (binary image)</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>surMATS</span>&gt; - pointer to set S (surrounds) for which <span
class=SpellE>a_ij</span> = 1</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>boolFUNC</span>&gt; - pointer to Boolean<span style='mso-spacerun:yes'>  </span>function<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>form<span style='mso-spacerun:yes'>  </span>L(<span
class=SpellE>a,b</span>)</pre><pre><span style='mso-spacerun:yes'>     </span>(<span
class=SpellE>c_ij</span> = L(<span class=SpellE>a_ij,b_ij</span>))</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>no_of_sur</span>&gt; - number of surrounds</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;connectedness&gt; - the connectivity scheme being<span style='mso-spacerun:yes'>  </span>used;<span style='mso-spacerun:yes'>  </span>one</pre><pre><span style='mso-spacerun:yes'>     </span>of...FOUR,EIGHT,SIX_NWSE,SIX_NESW.</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>no_of_iter</span>&gt; - number of iterations to perform</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;f&gt; - number of subfields into which the image<span style='mso-spacerun:yes'>  </span><span
class=SpellE>tesselation</span></pre><pre><span style='mso-spacerun:yes'>     </span>will be divided</pre><pre><o:p>&nbsp;</o:p></pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$<span class=SpellE>CVIPtoolsHOME\CVIPC\MORPHOLOGICAL\morph.c</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>Consider <span class=SpellE>a_ij</span> to have value one when the neighborhood of the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>picture</span> cell at (<span class=SpellE>i</span>, j) is in this set. Next consider <span
class=SpellE>b_ij</span> to</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>denote</span> the value of the picture cell itself. <span
class=GramE>At<span style='mso-spacerun:yes'>  </span>each</span><span style='mso-spacerun:yes'>  </span>point</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>of</span> the tessellated image a new binary value is computed that</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>is</span> the result for that point of the<span style='mso-spacerun:yes'>  </span>iterative<span style='mso-spacerun:yes'>  </span>modification</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>algorithm</span>.<span style='mso-spacerun:yes'>  </span><span
class=GramE>The<span style='mso-spacerun:yes'>  </span>new</span><span style='mso-spacerun:yes'>  </span>value <span
class=SpellE>c_ij</span> is to be computed from <span class=SpellE>a_ij</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>and</span> <span class=SpellE>b_ij</span>. Here a, b, c are Boolean variables<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>in</span><span style='mso-spacerun:yes'>  </span>that<span style='mso-spacerun:yes'>  </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>they<span style='mso-spacerun:yes'>  </span>can</span><span style='mso-spacerun:yes'>  </span>only<span style='mso-spacerun:yes'>  </span>take<span style='mso-spacerun:yes'>  </span>on values of 0 or 1. Computation of c</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>from</span> a and b can thus be specified by a Boolean function<span style='mso-spacerun:yes'>  </span>of</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>two</span> variables -- &lt;<span class=SpellE>boolFUNC</span>&gt;. We can uniquely define the <span
class=SpellE>mor</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>phological</span></span> iterative modification<span style='mso-spacerun:yes'>  </span>algorithm<span style='mso-spacerun:yes'>  </span>by<span style='mso-spacerun:yes'>  </span>specifying</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>four<span style='mso-spacerun:yes'>  </span>things</span>...<span style='mso-spacerun:yes'>  </span>(1)<span style='mso-spacerun:yes'>  </span><span
class=GramE>The<span style='mso-spacerun:yes'>  </span>set</span> S of surrounds &lt;<span
class=SpellE>surMATS</span>&gt; (for</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>which</span> <span class=SpellE>a_ij</span> = 1), (2) The Boolean function L(<span
class=SpellE>a,b</span>) (where <span class=SpellE>c_ij</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>=<span style='mso-spacerun:yes'>  </span>L</span>(<span
class=SpellE>a_ij,b_ij</span>)), (3) The number of iterations &lt;<span
class=SpellE>no_of_iter</span>&gt;,</pre><pre><span style='mso-spacerun:yes'>     </span>n. (4) The number of subfields, &lt;f&gt;, <span
class=GramE>into<span style='mso-spacerun:yes'>  </span>which</span><span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>image</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>tessellation</span> is divided. There are several Boolean functions</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>provided</span> for the user (see functions zero, <span
class=SpellE>not_b</span>,<span style='mso-spacerun:yes'>  </span>and,<span style='mso-spacerun:yes'>  </span>or,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>not_and</span><span class=GramE>,<span style='mso-spacerun:yes'>  </span><span
class=SpellE>or</span></span><span class=SpellE>_not_and</span>,<span style='mso-spacerun:yes'>  </span><span
class=SpellE>xor</span>.)<span style='mso-spacerun:yes'>  </span>In addition a set of hexagonal</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>lattices</span> are provided and declared as HEXLAT1, HEXLAT2, ...,</pre><pre><span style='mso-spacerun:yes'>     </span>HEXLAT14.<span style='mso-spacerun:yes'>  </span><span
class=GramE>The<span style='mso-spacerun:yes'>  </span>function</span><span style='mso-spacerun:yes'>  </span>array2Matrix can be used to form a</pre><pre><span style='mso-spacerun:yes'>     </span>Matrix structure that can then be passed to <span
class=SpellE><span class=GramE>morphomod</span></span><span class=GramE>(</span>...).</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span>A modified image</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>HISTORY</h2>

<pre><span style='mso-spacerun:yes'>     </span>History information recorded: None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>MORPHOLOGICAL library, <span
class=SpellE>morpho</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1996, 2004 SIUE -<span style='mso-spacerun:yes'>  </span>by <span style='mso-spacerun:yes'> </span>Scott<span style='mso-spacerun:yes'>  </span>E.<span style='mso-spacerun:yes'>  </span><span
class=GramE>Umbaugh<span style='mso-spacerun:yes'>  </span>and</span><span style='mso-spacerun:yes'>  </span>Greg</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>Hance</span></span><span class=GramE>.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
