<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="regular_mesh_files/filelist.xml">
<title>regular_mesh</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2004-06-05T00:50:00Z</o:Created>
  <o:LastSaved>2004-10-20T00:13:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>338</o:Words>
  <o:Characters>1931</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>16</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2265</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(269);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fregular_mesh.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span>regular_mesh - create a<span style='mso-spacerun:yes'>  </span>regular<span style='mso-spacerun:yes'>  </span>mesh<span style='mso-spacerun:yes'>  </span>corresponding<span style='mso-spacerun:yes'>  </span>to<span style='mso-spacerun:yes'>  </span>a</pre><pre><span style='mso-spacerun:yes'>     </span>given mesh and a given image</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>     </span>#include &quot;mesh.h&quot;<span style='mso-spacerun:yes'>  </span>struct<span style='mso-spacerun:yes'>  </span>mesh<span style='mso-spacerun:yes'>  </span>*regular_mesh(struct<span style='mso-spacerun:yes'>  </span>mesh*</pre><pre><span style='mso-spacerun:yes'>     </span>inmesh,int width,int height);</pre><pre><o:p>&nbsp;</o:p></pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$CVIPtoolsHOME\CVIPC\GEOMETRY\warp.c</pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>The regular_mesh() create a new<span style='mso-spacerun:yes'>  </span>mesh<span style='mso-spacerun:yes'>  </span>which<span style='mso-spacerun:yes'>  </span>has<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>same</pre><pre><span style='mso-spacerun:yes'>     </span>number<span style='mso-spacerun:yes'>   </span>of<span style='mso-spacerun:yes'>   </span>rows<span style='mso-spacerun:yes'>   </span>and<span style='mso-spacerun:yes'>   </span>columns<span style='mso-spacerun:yes'>   </span>as<span style='mso-spacerun:yes'>   </span>the<span style='mso-spacerun:yes'>   </span>input<span style='mso-spacerun:yes'>   </span>mesh</pre><pre><span style='mso-spacerun:yes'>     </span>structure(pointed to by &quot;inmesh&quot;).<span style='mso-spacerun:yes'>  </span>All the<span style='mso-spacerun:yes'>  </span>cells<span style='mso-spacerun:yes'>  </span>in<span style='mso-spacerun:yes'>  </span>this</pre><pre><span style='mso-spacerun:yes'>     </span>new mesh have exactly the same size.<span style='mso-spacerun:yes'>  </span>The whole mesh has the</pre><pre><span style='mso-spacerun:yes'>     </span>width<span style='mso-spacerun:yes'>  </span>and<span style='mso-spacerun:yes'>  </span>height<span style='mso-spacerun:yes'>  </span>given<span style='mso-spacerun:yes'>  </span>by<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>arguments<span style='mso-spacerun:yes'>  </span>&quot;width&quot;<span style='mso-spacerun:yes'>   </span>and</pre><pre><span style='mso-spacerun:yes'>     </span>&quot;height&quot;.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>     </span>struct mesh_node {</pre><pre><span style='mso-spacerun:yes'>          </span>int x;</pre><pre><span style='mso-spacerun:yes'>          </span>int y;</pre><pre><span style='mso-spacerun:yes'>     </span>};</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>struct mesh {</pre><pre><span style='mso-spacerun:yes'>          </span>int width;</pre><pre><span style='mso-spacerun:yes'>          </span>int height;</pre><pre><span style='mso-spacerun:yes'>          </span>struct mesh_node** nodes;</pre><pre><span style='mso-spacerun:yes'>     </span>};</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>struct float_pair {</pre><pre><span style='mso-spacerun:yes'>          </span>float x;</pre><pre><span style='mso-spacerun:yes'>          </span>float y;</pre><pre><span style='mso-spacerun:yes'>     </span>};</pre><pre><span style='mso-spacerun:yes'>     </span>(e.g.)</pre><pre><span style='mso-spacerun:yes'>     </span>typedef ... newval;</pre><pre><span style='mso-spacerun:yes'>     </span>#define AVAL ...</pre><pre><span style='mso-spacerun:yes'>     </span>extern newval that;</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span>The regular_mesh() returns a pointer points to the new<span style='mso-spacerun:yes'>  </span>mesh</pre><pre><span style='mso-spacerun:yes'>     </span>structure just created.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>     </span>#include &quot;mesh.h&quot; #include &lt;CVIPio.h&gt; main() {</pre><pre><span style='mso-spacerun:yes'>          </span>char<span style='mso-spacerun:yes'>           </span>*inputfile;</pre><pre><span style='mso-spacerun:yes'>          </span>Image<span style='mso-spacerun:yes'>          </span>*inputImage;</pre><pre><span style='mso-spacerun:yes'>          </span>int<span style='mso-spacerun:yes'>       </span>width, height;</pre><pre><span style='mso-spacerun:yes'>          </span>struct mesh<span style='mso-spacerun:yes'>    </span>*inmesh, *outmesh;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>          </span>print_CVIP(&quot;0Input<span style='mso-spacerun:yes'>   </span>the<span style='mso-spacerun:yes'>   </span>mesh<span style='mso-spacerun:yes'>    </span>file<span style='mso-spacerun:yes'>    </span>name:<span style='mso-spacerun:yes'>    </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>       </span>/*OPTIONAL1, get*/</pre><pre><span style='mso-spacerun:yes'>          </span>inputfile<span style='mso-spacerun:yes'>              </span>=<span style='mso-spacerun:yes'>              </span>getString_CVIP();</pre><pre><span style='mso-spacerun:yes'>                    </span>/*OPTIONAL1, a*/</pre><pre><span style='mso-spacerun:yes'>          </span>inmesh<span style='mso-spacerun:yes'>  </span>=<span style='mso-spacerun:yes'>  </span>file_to_mesh(inputfile);<span style='mso-spacerun:yes'>        </span>/*OPTIONAL1,</pre><pre><span style='mso-spacerun:yes'>     </span>mesh structure*/</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>          </span>print_CVIP(&quot;0Width of<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>image:<span style='mso-spacerun:yes'>   </span>&quot;);<span style='mso-spacerun:yes'>   </span>/*OPTIONAL2,</pre><pre><span style='mso-spacerun:yes'>     </span>get*/</pre><pre><span style='mso-spacerun:yes'>          </span>width =<span style='mso-spacerun:yes'>  </span>getInt_CVIP(10,<span style='mso-spacerun:yes'>  </span>1,<span style='mso-spacerun:yes'>  </span>1024);<span style='mso-spacerun:yes'>       </span>/*OPTIONAL2,</pre><pre><span style='mso-spacerun:yes'>     </span>an*/</pre><pre><span style='mso-spacerun:yes'>          </span>print_CVIP(&quot;0Height of<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>image:<span style='mso-spacerun:yes'>   </span>&quot;);<span style='mso-spacerun:yes'>  </span>/*OPTIONAL2,</pre><pre><span style='mso-spacerun:yes'>     </span>image*/</pre><pre><span style='mso-spacerun:yes'>          </span>height = getInt_CVIP(10, 1, 1024);<span style='mso-spacerun:yes'>      </span>/*OPTIONAL2*/</pre><pre><span style='mso-spacerun:yes'>          </span>inputImage = black_pgm(width, height);<span style='mso-spacerun:yes'>  </span>/*OPTIONAL2*/</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>          </span>outmesh = regular_mesh(inmesh, width, height);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>          </span>display_mesh(inputImage,<span style='mso-spacerun:yes'>    </span>outmesh);<span style='mso-spacerun:yes'>      </span>/*OPTIONAL3,</pre><pre><span style='mso-spacerun:yes'>     </span>display the mesh*/ }</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>     </span>None at this time</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>file_to_mesh(), keyboard_to_mesh(), mesh_to_file();</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1995, 2004 SIUE - by Scott Umbaugh and Jianxin Tan.</pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
