<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="bilinear_interp_files/filelist.xml">
<title>bilinear_interp</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="State"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>4</o:Revision>
  <o:TotalTime>3</o:TotalTime>
  <o:Created>2004-06-04T21:48:00Z</o:Created>
  <o:LastSaved>2004-10-19T23:44:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>405</o:Words>
  <o:Characters>2314</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>19</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2714</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(87);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fbilinear_interp.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>bilinear_interp</span> - shrinks or enlarges an image</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>stdio.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPimage.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPdef.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>bilinear.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>Image *<span
class=SpellE>bilinear_<span class=GramE>interp</span></span><span class=GramE>(</span>Image *<span
class=SpellE>inImg</span>, float factor)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>inImg</span></span>&gt; - pointer to an Image structure</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>factor</span>&gt; - factor &gt; 1 to enlarge, factor &lt; 1 to shrink</pre><pre><o:p>&nbsp;</o:p></pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$<span class=SpellE>CVIPtoolsHOME\CVIPC\GEOMETRY\bilinear.c</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>This function shrinks or enlarges <span
class=GramE>an<span style='mso-spacerun:yes'>  </span>image</span><span style='mso-spacerun:yes'>  </span>using<span style='mso-spacerun:yes'>  </span>bilinear</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>interpolation<span style='mso-spacerun:yes'>  </span>to</span> calculate the gray-level value of new pix-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>els</span></span>. This technique provides a smooth appearance, especially</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>when</span> enlarging an image. The newly-created pixel <span
class=GramE>values<span style='mso-spacerun:yes'>  </span>are</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>linearly</span> interpolated from formerly<span style='mso-spacerun:yes'>  </span>adjacent<span style='mso-spacerun:yes'>  </span>pixels,<span style='mso-spacerun:yes'>  </span>thus</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>producing</span> even transitions.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#define LOOP_<span
class=GramE>BILINEAR(</span><span class=SpellE>type,row,Mcol,int_map,delta_map,_Dptr</span>, _<span
class=SpellE>Nptr</span>) {</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=GramE>type</span> **_<span class=SpellE>Rowp</span>=(type **)(_<span
class=SpellE>Dptr</span>);</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=GramE>type</span> *<st1:stockticker>NEWP</st1:stockticker>=(type *)(_<span
class=SpellE>Nptr</span>);</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>rI</span>;<span style='mso-spacerun:yes'>   </span>for(<span
class=SpellE>rI</span>=0; <span class=SpellE>rI</span> &lt; (<span
class=SpellE>int</span>)<span class=SpellE>Mcol</span> ; <st1:State><st1:place><span
  class=SpellE>rI</span>++</st1:place></st1:State>) {</pre><pre><span style='mso-spacerun:yes'>              </span><span style='mso-spacerun:yes'> </span>*<st1:stockticker>NEWP</st1:stockticker>++=<span
class=GramE>BILINEAR(</span>(float)<span class=SpellE>delta_map</span>[row],(float)<span
class=SpellE>delta_map</span>[<span class=SpellE>rI</span>],</pre><pre><span style='mso-spacerun:yes'>                    </span>_<span
class=SpellE><span class=GramE>Rowp</span></span><span class=GramE>[</span>(<span
class=SpellE>int</span>)<span class=SpellE>int_map</span>[row]][(<span
class=SpellE>int</span>)<span class=SpellE>int_map</span>[<span class=SpellE>rI</span>]],</pre><pre><span style='mso-spacerun:yes'>                    </span>_<span
class=GramE>Rowp[</span>(int)int_map[row]][(int)int_map[rI+1]],</pre><pre><span style='mso-spacerun:yes'>                    </span>_<span
class=SpellE><span class=GramE>Rowp</span></span><span class=GramE>[</span>(<span
class=SpellE>int</span>)<span class=SpellE>int_map</span>[row+1]][(<span
class=SpellE>int</span>)<span class=SpellE>int_map</span>[<span class=SpellE>rI</span>]],</pre><pre><span style='mso-spacerun:yes'>                    </span>_<span
class=SpellE><span class=GramE>Rowp</span></span><span class=GramE>[</span>(<span
class=SpellE>int</span>)<span class=SpellE>int_map</span>[row+1]][(<span
class=SpellE>int</span>)<span class=SpellE>int_map</span>[rI+1]], type);</pre><pre><span style='mso-spacerun:yes'>          </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span>A scaled image</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>HISTORY</h2>

<pre><span style='mso-spacerun:yes'>     </span>History information recorded: None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPtoolkit.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPdef.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPimage.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPconvert.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>CVIPimage.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &quot;<span
class=SpellE>bilinear.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>       </span>#include &lt;<span
class=SpellE>stdio.h</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> main()</pre><pre><span style='mso-spacerun:yes'>      </span>{</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>Image *<span
class=SpellE>cvipImage</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>IMAGE_FORMAT format;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>char</span> *<span class=SpellE>inputfile</span>, *<span
class=SpellE>outputfile</span>;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> factor;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>setDisplay_<span class=GramE>Image</span></span><span class=GramE>(</span>&quot;<span
class=SpellE>RamViewer</span>&quot;, &quot;Default&quot;);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Input File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>inputfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>format</span> = <span class=SpellE>getFormat_CVIP</span>(<span
class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>read_Image</span>(<span
class=SpellE>inputfile</span>, 1);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> a scaling factor (from 0.1 to 3.0):</pre><pre><span style='mso-spacerun:yes'>     </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>factor</span> = <span class=SpellE>getFloat_CVIP</span>( 0.1, 3.0 );</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>bilinear_interp</span>(<span
class=SpellE>cvipImage</span>, factor)</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>fflush</span></span><span class=GramE>(</span><span
class=SpellE>stdin</span>);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Output File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>outputfile</span></span> = <span class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>write_<span class=GramE>Image</span></span><span class=GramE>(</span>cvipImage,outputfile,CVIP_NO,CVIP_NO,format,1);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>display_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>outputfile,format</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>free(</span><span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>free(</span><span class=SpellE>outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>     </span>The function cannot accept the value '0.3'; it causes a pro-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>gram</span> crash.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>GEOMETRY library</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1996, 2004 SIUE -<span style='mso-spacerun:yes'>  </span>by<span style='mso-spacerun:yes'>  </span>Scott<span style='mso-spacerun:yes'>  </span>E.<span style='mso-spacerun:yes'>  </span><span
class=GramE>Umbaugh<span style='mso-spacerun:yes'>  </span>and</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>Arve</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>Kjoelen</span></span><span class=GramE>.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
