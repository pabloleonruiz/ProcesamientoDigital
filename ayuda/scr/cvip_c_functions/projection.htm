<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="projection_files/filelist.xml">
<title>projection</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>4</o:Revision>
  <o:TotalTime>3</o:TotalTime>
  <o:Created>2004-06-05T00:44:00Z</o:Created>
  <o:LastSaved>2004-10-20T00:12:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>497</o:Words>
  <o:Characters>2838</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>23</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>3329</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(262);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fprojection.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=GramE>projection</span> - calculates horizontal and vertical<span style='mso-spacerun:yes'>  </span>projections</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>of</span> a size_normalized object of interest</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;math.h&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;CVIPimage.h&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>int</span> * projection(Image * labeledImage, int<span style='mso-spacerun:yes'>  </span>r,<span style='mso-spacerun:yes'>  </span>int<span style='mso-spacerun:yes'>  </span>c,<span style='mso-spacerun:yes'>  </span>int</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>height</span>, int width)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>labeledImage</span>&gt; -<span style='mso-spacerun:yes'>  </span>pointer to a labeled image</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;r&gt; - row coordinate of a point on the labeled image</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;c&gt; - column coordinate of a point on the labeled image</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>height</span>&gt; - image height after the<span style='mso-spacerun:yes'>  </span>object<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>interest<span style='mso-spacerun:yes'>  </span>is</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>normalized</span></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>width</span>&gt;<span style='mso-spacerun:yes'>  </span>- image width after the object of interest is nor-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>malized</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$CVIPtoolsHOME\CVIPC\FEATURE\size_norm_projection.c</pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>This function calculates the horizontal and vertical projec-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>tions<span style='mso-spacerun:yes'>  </span>of</span><span style='mso-spacerun:yes'>  </span>a<span style='mso-spacerun:yes'>  </span>binary<span style='mso-spacerun:yes'>  </span>object.<span style='mso-spacerun:yes'>  </span><span
class=GramE>The<span style='mso-spacerun:yes'>  </span>object</span> is first grown or</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>shrunk</span> (as required) to fit in the box<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>&lt;height&gt;<span style='mso-spacerun:yes'>  </span>height</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>and</span> &lt;width&gt; width. Zero-order hold is used to grow; deleting</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>every</span> other line (decimation) is used to shrink. <span
class=GramE>The<span style='mso-spacerun:yes'>  </span>object</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>is</span> grown (or shrunk), until it just fits within the box. The</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>growing</span> or shrinking is the same<span style='mso-spacerun:yes'>  </span>in<span style='mso-spacerun:yes'>  </span>both<span style='mso-spacerun:yes'>  </span>dimensions.<span style='mso-spacerun:yes'>  </span>The</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>function</span> then calculates horizontal and vertical projections</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>on</span> this size_normalized object according to equations<span style='mso-spacerun:yes'>  </span>given</pre><pre><span style='mso-spacerun:yes'>     </span>in chapter 3 of Computer Imaging, by Scott Umbaugh.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>     </span>None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span>A pointer to int, first &lt;height&gt; values <span
class=GramE>are<span style='mso-spacerun:yes'>  </span>for</span><span style='mso-spacerun:yes'>  </span>horizontal</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>projections</span>, following &lt;width&gt; data are for vertical projec-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>tions</span>. Zero values are not filtered out.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>HISTORY</h2>

<pre><span style='mso-spacerun:yes'>     </span>History information recorded: None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;math.h&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;ObjectContour.h&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;CVIPfeatures.h&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;CVIPconvert.h&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> main() {</pre><pre><span style='mso-spacerun:yes'>         </span>Image *inputImage, *labeledImage;</pre><pre><span style='mso-spacerun:yes'>         </span>IMAGE_FORMAT format;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span> *inputfile, *outputfile;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>int</span> rows, cols, r, c, h, w;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>int</span> *result;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span>setDisplay_<span
class=GramE>Image(</span>&quot;picture&quot;, &quot;Default&quot;);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span>print_<span
class=GramE>CVIP(</span>&quot;\nEnter the Input File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>inputfile</span> = (char *) getString_CVIP();</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>inputImage</span> = read_Image(inputfile, 1);</pre><pre><span style='mso-spacerun:yes'>         </span>view_<span
class=GramE>Image(</span>inputImage,inputfile);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>labeledImage</span> = label(inputImage);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>rows</span> = getNoOfRows_Image(labeledImage);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>cols</span> = getNoOfCols_Image(labeledImage);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span>print_<span
class=GramE>CVIP(</span>&quot;\nEnter the row coordinate of any<span style='mso-spacerun:yes'>  </span>pixel<span style='mso-spacerun:yes'>  </span>on</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> labled image: &quot;);</pre><pre><span style='mso-spacerun:yes'>         </span>r = getInt_<span
class=GramE>CVIP(</span>10, 0, rows);</pre><pre><span style='mso-spacerun:yes'>         </span>print_<span
class=GramE>CVIP(</span>&quot;\nEnter the col coordinate of any<span style='mso-spacerun:yes'>  </span>pixel<span style='mso-spacerun:yes'>  </span>on</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> labled image: &quot;);</pre><pre><span style='mso-spacerun:yes'>         </span>c = getInt_<span
class=GramE>CVIP(</span>10, 0, cols);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span>print_<span
class=GramE>CVIP(</span>&quot;\nEnter image height<span style='mso-spacerun:yes'>  </span>after<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>object<span style='mso-spacerun:yes'>  </span>of</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>interest</span> is normalized: &quot;);</pre><pre><span style='mso-spacerun:yes'>         </span>h = getInt_<span
class=GramE>CVIP(</span>10, 0, cols);</pre><pre><span style='mso-spacerun:yes'>         </span>print_<span
class=GramE>CVIP(</span>&quot;\nEnter image<span style='mso-spacerun:yes'>  </span>width<span style='mso-spacerun:yes'>  </span>after<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>object<span style='mso-spacerun:yes'>  </span>of</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>interest</span> is normalized: &quot;);</pre><pre><span style='mso-spacerun:yes'>         </span>w = getInt_<span
class=GramE>CVIP(</span>10, 0, cols);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>result</span> = projection(labeledImage, r, c, h, w);</pre><pre><span style='mso-spacerun:yes'>         </span>print_<span
class=GramE>CVIP(</span>&quot;\nThe horizontal projection<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>object</pre><pre><span style='mso-spacerun:yes'>     </span>(<span
class=GramE>r</span>, c) = %d\n&quot;, *<span class=GramE>result )</span>;</pre><pre><span style='mso-spacerun:yes'>         </span>print_<span
class=GramE>CVIP(</span>&quot;\nThe vertical projection of the object<span style='mso-spacerun:yes'>  </span>(r,</pre><pre><span style='mso-spacerun:yes'>     </span>c) = %d\n&quot;, *(result+1<span
class=GramE>) )</span>;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>free(</span>inputfile);</pre><pre><span style='mso-spacerun:yes'>       </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DIAGNOSTICS</h2>

<pre><span style='mso-spacerun:yes'>     </span>The labeled image can only of data type CVIP_INTEGER</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>FEATURE library</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1996, 2004 SIUE - by Scott E.<span style='mso-spacerun:yes'>  </span><span
class=GramE>Umbaugh<span style='mso-spacerun:yes'>  </span>and</span><span style='mso-spacerun:yes'>  </span>Wenxing</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>Li.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
