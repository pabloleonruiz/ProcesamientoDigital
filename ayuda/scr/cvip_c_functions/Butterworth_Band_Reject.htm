<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="Butterworth_Band_Reject_files/filelist.xml">
<title>Butterworth_Band_Reject</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>4</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2004-06-04T21:57:00Z</o:Created>
  <o:LastSaved>2004-10-19T23:46:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>655</o:Words>
  <o:Characters>3736</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>31</o:Lines>
  <o:Paragraphs>8</o:Paragraphs>
  <o:CharactersWithSpaces>4383</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(94);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2FButterworth_Band_Reject.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>Butterworth_Band_Reject</span> - performs <span
class=GramE>Butterworth<span style='mso-spacerun:yes'>  </span>band</span><span style='mso-spacerun:yes'>  </span>reject</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>filtering</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>math.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>stdio.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>stdlib.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPimage.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>Image<span style='mso-spacerun:yes'>    </span>*<span
class=SpellE>Butterworth_Band_<span class=GramE>Reject</span></span><span
class=GramE>(</span>Image<span style='mso-spacerun:yes'>    </span>*<span
class=SpellE>in_Image</span>,<span style='mso-spacerun:yes'>    </span><span
class=SpellE>int</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>block_size</span>, <span class=SpellE>int</span> dc, <span
class=SpellE>int</span> inner, <span class=SpellE>int</span> outer, <span
class=SpellE>int</span> order)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>in_Image</span>&gt; - pointer to an Image structure</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>block_size</span>&gt; - desired block size</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>dc</span>&gt; - drop(0) or retain(1) dc component</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>inner</span>&gt; - inner cutoff frequency</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>outer</span>&gt; - outer cutoff frequency</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>order</span>&gt; - filter order</pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$<span class=SpellE>CVIPtoolsHOME\CVIPC\XFORMFILTER\filter.c</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>      </span><span class=SpellE>Butterworth_Band_<span
class=GramE>Reject</span></span><span class=GramE>(</span>) performs two-dimensional<span style='mso-spacerun:yes'>  </span>butter-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>worth<span style='mso-spacerun:yes'>  </span><span class=SpellE>bandreject</span></span><span style='mso-spacerun:yes'>  </span>filtering<span style='mso-spacerun:yes'>  </span>in<span style='mso-spacerun:yes'>  </span>transform<span style='mso-spacerun:yes'>  </span>domain on input</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>image</span>. The filter transfer function of order &lt;order&gt; is:</pre><pre><span style='mso-spacerun:yes'>                  </span><span
class=GramE>H(</span><span class=SpellE>u,v</span>) = 1 / (1+ <span
class=SpellE>pow</span>(k, 2*order))</pre><pre><span style='mso-spacerun:yes'>         </span>where k = D(<span
class=SpellE>u,v</span>)W / [<span class=SpellE>pow</span>(D(<span
class=SpellE>u,v</span>), 2) - <span class=SpellE>pow</span>(D0, 2)]</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>D(</span>u, v) is the distance from the origin, W the width of<span style='mso-spacerun:yes'>  </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>band</span>,<span style='mso-spacerun:yes'>  </span>and<span style='mso-spacerun:yes'>  </span>D0<span style='mso-spacerun:yes'>  </span>is<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>center of the band. W is calculated</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>using</span> the inner and outer cut-off frequencies specified. The</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>frequency<span style='mso-spacerun:yes'>  </span>components</span><span style='mso-spacerun:yes'>  </span>within the band enclosed by inner and</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>outer</span> cut-off frequencies are attenuated<span style='mso-spacerun:yes'>  </span>according<span style='mso-spacerun:yes'>  </span>to<span style='mso-spacerun:yes'>  </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>transfer</span> function.<span style='mso-spacerun:yes'>  </span>All frequencies outside the band are not</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>attenuated</span>.<span style='mso-spacerun:yes'>  </span>The band is a 1/4 of a circular band if <span
class=GramE>the<span style='mso-spacerun:yes'>  </span>dc</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>component<span style='mso-spacerun:yes'>  </span>is</span> on the upper left-hand corner of its transform</pre><pre><span style='mso-spacerun:yes'>   </span><span style='mso-spacerun:yes'>  </span><span
class=GramE>plane</span>. If dc equals 1, the dc component will be retained, if</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>dc</span> equals, the dc component will be dropped.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>     </span>None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span>A filtered image</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>HISTORY</h2>

<pre><span style='mso-spacerun:yes'>     </span>History<span style='mso-spacerun:yes'>      </span>information<span style='mso-spacerun:yes'>      </span>recorded:<span style='mso-spacerun:yes'>       </span>None<span style='mso-spacerun:yes'>       </span>The</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>Butterworth_Band_<span class=GramE>Reject</span></span><span
class=GramE><span style='mso-spacerun:yes'>  </span>filter</span><span style='mso-spacerun:yes'>  </span>will<span style='mso-spacerun:yes'>  </span>work<span style='mso-spacerun:yes'>  </span>for<span style='mso-spacerun:yes'>  </span>both real-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>valued</span> and imaginary-valued transform. If the origin <span
class=GramE>of<span style='mso-spacerun:yes'>  </span>the</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>transform</span> is on the center of its frequency plane (shifted),</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> cutoff frequencies can range from 1 to<span style='mso-spacerun:yes'>  </span>blocksize/2<span style='mso-spacerun:yes'>  </span>and</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the<span style='mso-spacerun:yes'>  </span><span class=SpellE>Butterworth</span></span><span
class=SpellE>_Band_Reject</span> function can be called directly</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>with</span> correct parameters. If the origin of <span class=GramE>the<span style='mso-spacerun:yes'>  </span>transform</span><span style='mso-spacerun:yes'>  </span>is</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>on<span style='mso-spacerun:yes'>  </span>the</span><span style='mso-spacerun:yes'>  </span>upper<span style='mso-spacerun:yes'>  </span>left-hand<span style='mso-spacerun:yes'>  </span>corner<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>its<span style='mso-spacerun:yes'>  </span>frequency plane,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>nonfft_<span class=GramE>xformfilter</span></span><span
class=GramE>(</span>)<span style='mso-spacerun:yes'>    </span>must<span style='mso-spacerun:yes'>     </span>be<span style='mso-spacerun:yes'>     </span>used <span style='mso-spacerun:yes'>    </span>to<span style='mso-spacerun:yes'>     </span>call</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>Butterworth_Band_<span class=GramE>Reject</span></span><span
class=GramE>(</span>)<span style='mso-spacerun:yes'>  </span>with<span style='mso-spacerun:yes'>  </span><span
class=SpellE>filtertype</span> = 8.<span style='mso-spacerun:yes'>  </span>The cutoff</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>frequencies</span> in this case can range from 1 to <span
class=SpellE>blocksize</span> since</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>a<span style='mso-spacerun:yes'>  </span>block</span> is treated as a quarter of a regular block with its</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>origin</span> on the center. If <span class=SpellE>brf_<span
class=GramE>setup</span></span><span class=GramE>(</span>) is to be used<span style='mso-spacerun:yes'>  </span>to<span style='mso-spacerun:yes'>  </span>call</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>Butterworth_Band_<span class=GramE>Reject</span></span><span
class=GramE>(</span>),<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>transform must be setup and</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>recognized<span style='mso-spacerun:yes'>  </span>by</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>brf_setup</span>(),<span style='mso-spacerun:yes'>  </span>otherwise<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>setup<span style='mso-spacerun:yes'>  </span>program</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>automatically</span> assumes the <span class=SpellE>transform's</span> dc component is on the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>center</span> (<span class=SpellE>dcpos</span>=1).</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPtoolkit.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPimage.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPdef.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPconvert.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPview.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#define VIEWER &quot;picture&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#define VIDEO_APP &quot;<span
class=SpellE>SunVideo</span> &amp;&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> main()</pre><pre><span style='mso-spacerun:yes'>      </span>{</pre><pre><span style='mso-spacerun:yes'>      </span>Image *<span
class=SpellE>cvipImage</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>IMAGE_FORMAT format;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>char</span> *<span class=SpellE>inputfile</span>,*<span
class=SpellE>outputfile</span>;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>(<span
class=GramE>void</span>) <span class=SpellE>setDisplay_Image</span>(VIEWER, &quot;Default&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the<span style='mso-spacerun:yes'>  </span>Input File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>inputfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>format</span> = <span class=SpellE>getFormat_CVIP</span>(<span
class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>read_Image</span>(inputfile,1);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, <span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>free(</span><span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span>/* the following call performs the <span
class=SpellE>fft_transform</span> on the</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>input</span> image with the block size equal to 256 */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span>=(Image *)<span
class=SpellE>fft_transform</span>(cvipImage,256);</pre><pre><span style='mso-spacerun:yes'>      </span>/* the following call performs the <span
class=SpellE>butterworth</span> band reject</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>filtering</span> of order 2 on the transformed image with the</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>lower</span> cut off equal to 0 and the higher cut off equal to 64</pre><pre><span style='mso-spacerun:yes'>     </span>*/</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = (Image *)<span
class=SpellE>Butterworth_Band_Reject</span>(<span class=SpellE>cvipImage</span>,</pre><pre><span style='mso-spacerun:yes'>      </span>256<span
class=GramE>,1,0,64,2</span>);</pre><pre><span style='mso-spacerun:yes'>      </span>/* the following call performs the inverse <span
class=SpellE>fft_transform</span> in</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>the<span style='mso-spacerun:yes'>  </span>filtered</span> image with the block size equal to 256 */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = (Image *)<span
class=SpellE>ifft_transform</span>(cvipImage,256);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Output File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>outputfile</span></span> = <span class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage,outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>write_<span class=GramE>Image</span></span><span class=GramE>(</span>cvipImage,outputfile,CVIP_NO,CVIP_NO,format,1);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>free(</span><span class=SpellE>outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>XFORMFILTER library</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1996, 2004 SIUE - by Scott E. Umbaugh and Simon Low.</pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
