<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="btc_compress,%20btc_decompress_files/filelist.xml">
<title>btc_compress,btc_decompress</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>4</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2004-06-04T21:55:00Z</o:Created>
  <o:LastSaved>2004-10-19T23:45:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>428</o:Words>
  <o:Characters>2440</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>20</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2863</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(90);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fbtc_compress%2C+btc_decompress.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>      </span><span class=SpellE>btc_compress</span>, <span
class=SpellE>btc_decompress</span> <span class=GramE>-<span style='mso-spacerun:yes'>  </span>2</span><span style='mso-spacerun:yes'>  </span>level<span style='mso-spacerun:yes'>  </span>Block<span style='mso-spacerun:yes'>  </span>Truncation</pre><pre><span style='mso-spacerun:yes'>     </span>Coding (BTC) scheme</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>stdio.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>string.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPimage.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPconvert.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>block_trunc_coding.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>types.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>stat.h</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>int</span></span><span class=GramE><span style='mso-spacerun:yes'>  </span><span
class=SpellE>btc</span></span><span class=SpellE>_compress</span>(Image<span style='mso-spacerun:yes'>  </span>*<span
class=SpellE>inputImage</span>,<span style='mso-spacerun:yes'>  </span>char<span style='mso-spacerun:yes'>  </span>*filename,<span style='mso-spacerun:yes'>  </span><span
class=SpellE>int</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>blocksize</span></span>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>inputImage</span></span>&gt; - pointer to an Image structure</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>filename</span>&gt; - character array</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>blocksize</span></span>&gt; - <span
class=SpellE>blocksize</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>Image* <span
class=SpellE>btc_<span class=GramE>decompress</span></span><span class=GramE>(</span>char *filename)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>filename</span>&gt; - character array</pre><pre><o:p>&nbsp;</o:p></pre><pre><o:p>&nbsp;</o:p></pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$<span class=SpellE>CVIPtoolsHOME\CVIPC\COMPRESSION\block_trunc_coding.c</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>The image is first divided into blocks, and then the digital</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>representation<span style='mso-spacerun:yes'>  </span>of</span> each pixel in a block is truncated to one</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>bit</span> by<span style='mso-spacerun:yes'>  </span><span
class=SpellE>thresholding</span><span style='mso-spacerun:yes'>  </span>and<span style='mso-spacerun:yes'>  </span>moment<span style='mso-spacerun:yes'>  </span>preserving<span style='mso-spacerun:yes'>  </span>selection<span style='mso-spacerun:yes'>  </span>of</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>binary</span> levels.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The function code was developed <span
class=GramE>from <span style='mso-spacerun:yes'> </span>Chapter</span><span style='mso-spacerun:yes'>  </span>5<span style='mso-spacerun:yes'>  </span>Section<span style='mso-spacerun:yes'>  </span>6</pre><pre><span style='mso-spacerun:yes'>     </span>&quot;<span
class=GramE>Block<span style='mso-spacerun:yes'>  </span>Truncation</span><span style='mso-spacerun:yes'>  </span>Compression&quot;<span style='mso-spacerun:yes'>  </span>(P176<span style='mso-spacerun:yes'>  </span>- P181) in &quot;Digital</pre><pre><span style='mso-spacerun:yes'>     </span>Picture Processing&quot; Volume1, second edition<span
class=GramE>,<span style='mso-spacerun:yes'>  </span><span class=SpellE>Azriel</span></span><span style='mso-spacerun:yes'>  </span>Rosen-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>feld</span></span><span class=GramE><span style='mso-spacerun:yes'>  </span>and</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>Avinash</span><span style='mso-spacerun:yes'>  </span>C.<span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>KakYiyan</span></span><span class=GramE>.</span><span style='mso-spacerun:yes'>  </span><span
class=GramE>Academic<span style='mso-spacerun:yes'>  </span>Press</span>, INC. San</pre><pre><span style='mso-spacerun:yes'>     </span>Diego, CA. 1982</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>     </span>None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>btc_compress</span>: 0 on success, -1 on failure</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>btc_decompression</span>:<span style='mso-spacerun:yes'>  </span>an<span style='mso-spacerun:yes'>   </span>uncompressed<span style='mso-spacerun:yes'>   </span>image<span style='mso-spacerun:yes'>   </span>pointer<span style='mso-spacerun:yes'>   </span>on</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>success,</span>a</span> NULL pointer on failure</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>HISTORY</h2>

<pre><span style='mso-spacerun:yes'>     </span>History information recorded: None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPimage.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>block_trunc_coding.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPconvert.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> main() {</pre><pre><span style='mso-spacerun:yes'>        </span>Image *<span
class=SpellE>cvipImage</span>, *<span class=SpellE>outImage</span>;</pre><pre><span style='mso-spacerun:yes'>        </span>IMAGE_FORMAT format;</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=GramE>char</span> *<span class=SpellE>inputfile</span>, *<span
class=SpellE>outputfile</span>;</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>blocksize</span>;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE>setDisplay_<span class=GramE>Image</span></span><span class=GramE>(</span>&quot;picture&quot;, &quot;Default&quot;);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Input File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE><span class=GramE>inputfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>read_Image</span>(<span
class=SpellE>inputfile</span>, 1);</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, <span class=SpellE>inputfile</span>);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the block size:&quot;);</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE><span class=GramE>blocksize</span></span> = <span class=SpellE>getInt_CVIP</span>(10, 0, 64);</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Compressed File Name:&quot;);</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=SpellE><span class=GramE>outputfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>        </span><span
class=GramE>if</span> (<span class=SpellE>btc_compress</span>(<span
class=SpellE>cvipImage,outputfile,blocksize</span>)&lt;0) {</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=SpellE>error_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;<span
class=SpellE>btc_compress</span>&quot;, &quot;compression failed&quot;);</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=GramE>exit(</span>1);</pre><pre><span style='mso-spacerun:yes'>        </span>} else if ((<span
class=SpellE>outImage</span>=<span class=SpellE>btc_<span class=GramE>decompress</span></span><span
class=GramE>(</span><span class=SpellE>outputfile</span>))==NULL){</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=SpellE>error_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;<span
class=SpellE>btc_decompress</span>&quot;, &quot;decompression failed&quot;);</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=GramE>exit(</span>1);</pre><pre><span style='mso-spacerun:yes'>        </span>} else <span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>outImage</span>, <span class=SpellE>outputfile</span>);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>        </span><span
class=GramE>free(</span><span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=GramE>free(</span><span class=SpellE>outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>     </span>For gray level images, the compression ratios are not <span
class=SpellE>calcu</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>lated</span></span> correctly.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>COMPRESSION library,<span style='mso-spacerun:yes'>       </span>btc2_<span
class=GramE>compress(</span>),<span style='mso-spacerun:yes'>       </span>btc2_decompress(),</pre><pre><span style='mso-spacerun:yes'>     </span>btc3_<span
class=GramE>compress(</span>), btc3_decompress()</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1996, 2004 SIUE - by Scott Umbaugh, <span
class=SpellE>Kui</span> <span class=SpellE>Cai</span>.</pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
