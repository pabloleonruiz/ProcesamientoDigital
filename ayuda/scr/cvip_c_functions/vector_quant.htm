<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="vector_quant_files/filelist.xml">
<title>vector_quant</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>3</o:TotalTime>
  <o:Created>2004-06-05T01:28:00Z</o:Created>
  <o:LastSaved>2004-10-20T00:19:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>866</o:Words>
  <o:Characters>4942</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>41</o:Lines>
  <o:Paragraphs>11</o:Paragraphs>
  <o:CharactersWithSpaces>5797</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(308);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fvector_quant.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>      </span><span class=SpellE>vector_quant</span> - A <span
class=SpellE>vector_quant</span> compression method</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>types.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>stat.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>vector_quant.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtoolkit.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPconvert.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPimage.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtransform.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>vector_quant.h</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>int</span></span><span style='mso-spacerun:yes'>   </span><span
class=SpellE>vq_compress</span> (</pre><pre><span style='mso-spacerun:yes'>         </span>Image<span style='mso-spacerun:yes'>         </span>*<span
class=SpellE>inputImage</span>,</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span><span style='mso-spacerun:yes'>          </span>*<span
class=SpellE>outfile_name</span>,</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>int</span></span><span style='mso-spacerun:yes'>           </span><span
class=SpellE>cdbook_in_file</span>,</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>int</span></span><span style='mso-spacerun:yes'>           </span><span
class=SpellE>fixed_codebook</span>,</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>float</span><span style='mso-spacerun:yes'>         </span><span
class=SpellE>in_error_thres</span>,</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span><span style='mso-spacerun:yes'>          </span>*<span
class=SpellE>cdbook_file</span>,</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>int</span></span><span style='mso-spacerun:yes'>           </span><span
class=SpellE>in_no_of_entries</span>,</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>int</span></span><span style='mso-spacerun:yes'>           </span><span
class=SpellE>in_row_vector</span>,<span style='mso-spacerun:yes'>    </span>/* the<span style='mso-spacerun:yes'>  </span>number<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>rows</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>within</span> a vector */</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>int</span></span><span style='mso-spacerun:yes'>           </span><span
class=SpellE>in_col_vector</span>,<span style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'>  </span>/* the<span style='mso-spacerun:yes'>  </span>number<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>cols</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>within</span> a vector */</pre><pre><span style='mso-spacerun:yes'>         </span>XFORM_<st1:stockticker>FMT</st1:stockticker><span style='mso-spacerun:yes'>     </span><span
class=SpellE>xform</span></pre><pre><span style='mso-spacerun:yes'>       </span>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>inputImage</span></span>&gt; - pointer to an Image structure</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>outfile_name</span>&gt; - output file name</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>cdbook_in_file</span>&gt; - codebook file writing control</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>fixed_codebook</span>&gt; - codebook file reading control</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>in_error_thres</span>&gt; - distortion control</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>cdbook_file</span>&gt; - the codebook file name</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>in_no_of_entries</span>&gt; - total number of vectors <span
class=GramE>in<span style='mso-spacerun:yes'>  </span>the</span><span style='mso-spacerun:yes'>  </span>code-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>book</span></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>in_row_vector</span>&gt; - total number of rows in a vector</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>in_col_vector</span>&gt; - total number of cols in a vector</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>xform</span></span>&gt; - what kind of transform and compression ratio<span style='mso-spacerun:yes'>  </span>are</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>used</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>Image *<span
class=SpellE>vq_<span class=GramE>decompress</span></span><span class=GramE>(</span>char *filename)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>filename</span>&gt; - character array</pre><pre><o:p>&nbsp;</o:p></pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$<span class=SpellE>CVIPtoolsHOME\CVIPC\COMPRESSION\vector_quantization.c</span></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>Vector quantization works by dividing the image <span
class=GramE>into<span style='mso-spacerun:yes'>  </span>blocks</span></pre><pre><span style='mso-spacerun:yes'>     </span>(<span
class=GramE>vectors</span>)<span style='mso-spacerun:yes'>  </span>and<span style='mso-spacerun:yes'>  </span>generating a codebook for those vectors. The</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>codebook</span> contains the vectors, these can be<span style='mso-spacerun:yes'>  </span>thought<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>as</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>subimages</span></span>,<span style='mso-spacerun:yes'>  </span>which are used to represent the image. The index</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>into</span> the codebook is stored in place of the pixel values. It</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>uses</span> the LBG algorithm to generate the codebook, which is an</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>iterative<span style='mso-spacerun:yes'>  </span>algorithm</span><span style='mso-spacerun:yes'>  </span>that<span style='mso-spacerun:yes'>  </span>continues<span style='mso-spacerun:yes'>   </span>searching<span style='mso-spacerun:yes'>   </span>for<span style='mso-spacerun:yes'>   </span>an</pre><pre><span style='mso-spacerun:yes'>     </span>&quot;<span
class=GramE>optimal</span>&quot;<span style='mso-spacerun:yes'>  </span>codebook<span style='mso-spacerun:yes'>  </span>until<span style='mso-spacerun:yes'>  </span>some<span style='mso-spacerun:yes'>  </span>minimum error criterion is</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>reached</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>You enter a value for the Error Threshold.<span style='mso-spacerun:yes'>  </span><span
class=GramE>This<span style='mso-spacerun:yes'>  </span>number</span><span style='mso-spacerun:yes'>  </span>is</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>actually<span style='mso-spacerun:yes'>  </span>the</span> difference of the total error between two con-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>secutive</span></span> iterations.<span style='mso-spacerun:yes'>  </span>The smaller the number<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>the</span><span style='mso-spacerun:yes'>  </span>&quot;better&quot;</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> codebook and the longer it takes.<span style='mso-spacerun:yes'>  </span>Since we are actually</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>searching</span> in a many-dimensional space, there is no guarantee</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>of<span style='mso-spacerun:yes'>  </span>a</span><span style='mso-spacerun:yes'>  </span>globally optimal solution. Also, the search algorithm</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>does</span> not take into account human<span style='mso-spacerun:yes'>  </span>visual<span style='mso-spacerun:yes'>  </span>perception,<span style='mso-spacerun:yes'>  </span>so<span style='mso-spacerun:yes'>  </span>a</pre><pre><span style='mso-spacerun:yes'>     </span>&quot;<span
class=GramE>better</span>&quot; solution may actually look worse.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>You enter the Entries, which is the number of vectors in the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>codebook</span>.<span style='mso-spacerun:yes'>   </span><span
class=GramE>So<span style='mso-spacerun:yes'>  </span>the</span><span style='mso-spacerun:yes'>  </span>size<span style='mso-spacerun:yes'>  </span>of the codebook is the (number of</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>entries)</span>x(vector size).<span style='mso-spacerun:yes'>  </span>The vector <span
class=GramE>size<span style='mso-spacerun:yes'>  </span>is</span><span style='mso-spacerun:yes'>  </span>determined<span style='mso-spacerun:yes'>  </span>by</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> Vector Height and Width. For example, with a height of 4</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>and</span> width of 4, the vector size is 4x4=16.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The final two parameters are controlled by selection <span
class=GramE>of<span style='mso-spacerun:yes'>  </span>one</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>of<span style='mso-spacerun:yes'>  </span>the</span> four <span
class=SpellE>radiobuttons</span> on the left.<span style='mso-spacerun:yes'>  </span>&quot;<span
class=SpellE>cdbook_in_file</span>&quot; and</pre><pre><span style='mso-spacerun:yes'>     </span>&quot;<span
class=SpellE>fixed_codebook&quot;have</span> to do with how the image <span
class=GramE>is<span style='mso-spacerun:yes'>  </span>compressed</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>and<span style='mso-spacerun:yes'>  </span>saved</span> to a file, and represent the four possible <span
class=SpellE>permu</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>tations</span></span> of the following</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>two</span> things: 1) You can either generate a new codebook<span style='mso-spacerun:yes'>  </span>from</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> image, or use a</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>codebook</span> that has already been generated (it<span style='mso-spacerun:yes'>  </span>can<span style='mso-spacerun:yes'>  </span>be<span style='mso-spacerun:yes'>  </span>from</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>any</span> image, but must be</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>saved</span> to a file). 2) You can either save the <span
class=GramE>codebook<span style='mso-spacerun:yes'>  </span>with</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> compressed file,</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>or</span> in a separate file.<span style='mso-spacerun:yes'>  </span>In general<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>you</span><span style='mso-spacerun:yes'>  </span>will<span style='mso-spacerun:yes'>  </span>get<span style='mso-spacerun:yes'>  </span>better</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>results</span> if you use a</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>codebook</span> generated from the specific image<span style='mso-spacerun:yes'>  </span>file.<span style='mso-spacerun:yes'>  </span>However,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>if</span> you have a group of</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>similar</span> images, you may want to generate a common<span style='mso-spacerun:yes'>  </span>codebook</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>and</span> save it in a</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>separate</span> file. If you save the codebook in a separate file,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>you<span style='mso-spacerun:yes'>  </span>will</span> have a higher compression ratio, but you must keep</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>track</span> of the <span class=SpellE>codeboook</span> file.<span style='mso-spacerun:yes'>  </span>If you keep the <span
class=GramE>codebook<span style='mso-spacerun:yes'>  </span>with</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> compressed (coded) file, then the compression ratio will</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>not</span> be as large.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>     </span>None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>      </span><span class=SpellE>vq_compress</span>: 1 on success, 0 on failure</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>vq_decompress</span>: an uncompressed image <span class=GramE>pointer<span style='mso-spacerun:yes'>  </span>on</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>success,a</span></pre><pre><span style='mso-spacerun:yes'>     </span>NULL pointer on failure</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>types.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>stat.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtoolkit.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPconvert.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPimage.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtransform.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>vector_quant</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> main() {</pre><pre><span style='mso-spacerun:yes'>         </span>Image *<span
class=SpellE>cvipImage</span>, *<span class=SpellE>outImage</span>;</pre><pre><span style='mso-spacerun:yes'>   </span><span style='mso-spacerun:yes'>      </span><span
class=GramE>char</span> *<span class=SpellE>inputfile,outfile</span>;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span> c1='n',c2='n';</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>xform</span> = 10;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>setDisplay_<span class=GramE>Image</span></span><span class=GramE>(</span>&quot;picture&quot;, &quot;Default&quot;);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Input File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>inputfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>read_Image</span>(<span
class=SpellE>inputfile</span>, 1);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, <span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Compressed File Name:&quot;);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>outfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>         </span>/* <span
class=GramE>The</span> following command will compress the input image with the</pre><pre> <span style='mso-spacerun:yes'>        </span><span
class=GramE>tolerance</span> value equal to 15, recursion size min. equal to 4 and</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>recursion</span> size max. <span class=GramE>equal</span> to 6, domain type equal to 0, domain step</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>equal</span> to 1, scale bits equal to 5 and offset bits equal to 7 with</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>faster</span> compression time */</pre><pre><span style='mso-spacerun:yes'>         </span>if (<span
class=SpellE>vq_compress</span>(cvipImage,outfile,1,0,10,codebook,128,4,4,10)&lt;0) {</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=SpellE>error_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;<span
class=SpellE>vq_compress</span>&quot;, &quot;compression failed&quot;);</pre><pre><span style='mso-spacerun:yes'>             </span><span
class=GramE>exit(</span>1);</pre><pre><span style='mso-spacerun:yes'>         </span>} else if ((<span
class=SpellE>outImage</span>=<span class=SpellE>vq_<span class=GramE>decompress</span></span><span
class=GramE>(</span><span class=SpellE>outfile</span>))==NULL){</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=SpellE>error_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;<span
class=SpellE>vq_decompress</span>&quot;, &quot;decompression failed&quot;);</pre><pre><span style='mso-spacerun:yes'>             </span><span
class=GramE>exit(</span>1);</pre><pre><span style='mso-spacerun:yes'>         </span>} else <span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>outImage</span>, <span class=SpellE>outputfile</span>);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>free(</span><span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>free(</span><span class=SpellE>outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>         </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>     </span>None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>COMPRESSION library</pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
