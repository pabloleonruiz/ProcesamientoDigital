<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="xvq_files/filelist.xml">
<title>xvq</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2004-06-05T01:42:00Z</o:Created>
  <o:LastSaved>2004-10-20T00:20:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>960</o:Words>
  <o:Characters>5478</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>45</o:Lines>
  <o:Paragraphs>12</o:Paragraphs>
  <o:CharactersWithSpaces>6426</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(317);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fxvq.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE><span
class=GramE>xvq</span></span> - Performing vector quantization in different domains</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>stdio.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>stdlib.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>math.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>string.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtoolkit.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>wavelet.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtransform.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtools.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>vector_quant.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>vector_data.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>Image<span style='mso-spacerun:yes'>     </span>*<span
class=SpellE><span class=GramE>xvq</span></span><span class=GramE>(</span>Image *image, <span
class=SpellE>int</span> <span class=SpellE>xform</span>,<span style='mso-spacerun:yes'>  </span><span
class=SpellE>int</span><span style='mso-spacerun:yes'>  </span>scheme,</pre><pre><span style='mso-spacerun:yes'>                    </span><span
class=GramE>char</span><span style='mso-spacerun:yes'>    </span>*filename,<span style='mso-spacerun:yes'>   </span><span
class=SpellE>int</span><span style='mso-spacerun:yes'>   </span><span
class=SpellE>file_type</span>,</pre><pre><span style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'>                  </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>remap_type</span>, <span
class=SpellE>int</span> dc)</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>image</span>&gt;<span style='mso-spacerun:yes'>       </span>input image</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>xform</span></span>&gt;<span style='mso-spacerun:yes'>       </span>transform domain</pre><pre><span style='mso-spacerun:yes'>                    </span>1 - DCT</pre><pre><span style='mso-spacerun:yes'>                    </span>2 - PCT_DCT</pre><pre><span style='mso-spacerun:yes'>                    </span>3 - WAVELET</pre><pre><span style='mso-spacerun:yes'>                    </span>4 - PCT_WAVELET</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>scheme</span>&gt;<span style='mso-spacerun:yes'>   </span><span style='mso-spacerun:yes'>   </span>VQ schemes</pre><pre><span style='mso-spacerun:yes'>                    </span>1~8 - compression schemes in the domain</pre><pre><span style='mso-spacerun:yes'>                          </span><span
class=GramE>mentioned</span> above;</pre><pre><span style='mso-spacerun:yes'>                      </span>9 - <span
class=GramE>customize</span> the vector sets, but this</pre><pre><span style='mso-spacerun:yes'>                          </span><span
class=GramE>can</span> only be used in CVIPtools;</pre><pre><span style='mso-spacerun:yes'>                    </span><span style='mso-spacerun:yes'> </span>10 - VQ in spatial domain.</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>filename</span>&gt;<span style='mso-spacerun:yes'>    </span>temporary file name</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>filetype</span></span>&gt;<span style='mso-spacerun:yes'>    </span>the file type you want to save as</pre><pre><span style='mso-spacerun:yes'>                    </span>1 - CVIP_FLOAT</pre><pre><span style='mso-spacerun:yes'>                    </span>2 - CVIP_BYTE</pre><pre><span style='mso-spacerun:yes'>                    </span>3 - CVIP_SHORT</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>remap_type</span><span class=GramE>&gt;<span style='mso-spacerun:yes'>  </span>the</span> remap method that you should choose when</pre><pre><span style='mso-spacerun:yes'>                    </span><span
class=GramE>you</span> save file as CVIP_BYTE data type</pre><pre><span style='mso-spacerun:yes'>                    </span><span
class=GramE>or</span> CVIP_SHORT data type</pre><pre><span style='mso-spacerun:yes'>                    </span>1 - <span
class=GramE>linear</span> remap</pre><pre><span style='mso-spacerun:yes'>                    </span>2 - <span
class=GramE>log</span> remap</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>dc</span>&gt;<span style='mso-spacerun:yes'>          </span>indicates whether you want to quantize DC</pre><pre><span style='mso-spacerun:yes'>                    </span><span
class=GramE>term</span> when doing vector quantization (only</pre><pre><span style='mso-spacerun:yes'>                    </span><span
class=GramE>valid</span> when you want to save file as</pre><pre><span style='mso-spacerun:yes'>                    </span>CVIP_BYTE data type or CVIP_SHORT data</pre><pre><span style='mso-spacerun:yes'>                    </span><span
class=GramE>type</span>)</pre><pre><span style='mso-spacerun:yes'>                    </span>0 - quantize DC term</pre><pre><span style='mso-spacerun:yes'>                    </span>1 - <span
class=SpellE><span class=GramE>seperate</span></span> DC term and keep it in history</pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$<span class=SpellE>CVIPtoolsHOME\CVIPC\COMPRESSION\xvq.c</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>XVQ is designed for compression using vector quantization in</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the<span style='mso-spacerun:yes'>  </span>discrete</span><span style='mso-spacerun:yes'>  </span>wavelet or discrete cosine transform domains.</pre><pre><span style='mso-spacerun:yes'>     </span>The user can choose <span
class=GramE>the<span style='mso-spacerun:yes'>  </span>transform</span><span style='mso-spacerun:yes'>  </span>domain<span style='mso-spacerun:yes'>  </span>and<span style='mso-spacerun:yes'>  </span>select<span style='mso-spacerun:yes'>  </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>principal</span> components transform PCT as pre-process (for color</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>images</span>), by selecting one<span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>four<span style='mso-spacerun:yes'>  </span>transform<span style='mso-spacerun:yes'>  </span>options</pre><pre><span style='mso-spacerun:yes'>     </span>(DCT<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>PCT</span>_DCT, WAVELET, PCT_WAV<st1:stockticker>ELET</st1:stockticker>).<span style='mso-spacerun:yes'>  </span>The user selects one</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>of</span> the four compression algorithms<span style='mso-spacerun:yes'>  </span>(VQ1,<span style='mso-spacerun:yes'>  </span>VQ2,<span style='mso-spacerun:yes'>  </span>VQ3,<span style='mso-spacerun:yes'>  </span>VQ4),</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>which</span> represent different codebook and vector sizes (to view</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> default values select the 'Customize' button).</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>For a 512x512 color image, with FLOAT data type, <span
class=GramE>VQ1<span style='mso-spacerun:yes'>  </span>~</span><span style='mso-spacerun:yes'>  </span>VQ4</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>represent</span> the compression ratios at 4:1, 8:1, 14:1 and 20:1.</pre><pre><span style='mso-spacerun:yes'>     </span>The parameters of schemes is <span
class=SpellE>defiend</span> <span class=GramE>as :</span></pre><pre><span style='mso-spacerun:yes'>      </span>1 - without PCT, compression ratio 4:1;</pre><pre><span style='mso-spacerun:yes'>      </span>2 - with PCT, compression ratio 4:1;</pre><pre><span style='mso-spacerun:yes'>      </span>3 - without PCT, compression ratio 8:1;</pre><pre><span style='mso-spacerun:yes'>      </span>4 - with PCT, compression ratio 8:1;</pre><pre><span style='mso-spacerun:yes'>      </span>5 - without PCT, compression ratio 14:1;</pre><pre><span style='mso-spacerun:yes'>      </span>6 - with PCT, compression ratio 14:1;</pre><pre><span style='mso-spacerun:yes'>      </span>7 - without PCT, compression ratio 20:1;</pre><pre><span style='mso-spacerun:yes'>      </span>8 - with PCT, compression ratio 20:1;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The user can select the data <span
class=GramE>type<span style='mso-spacerun:yes'>  </span>for</span><span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>codebook,<span style='mso-spacerun:yes'>  </span>less</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>precise</span> data types will provide greater compression. If BYTE</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>is</span> chosen, the user can select the method that will be<span style='mso-spacerun:yes'>  </span>used</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>to</span> remap the float data (from the transform), into byte for-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>mat</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>If BYTE or SHORT data <span
class=GramE>type<span style='mso-spacerun:yes'>  </span>and</span><span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>DCT<span style='mso-spacerun:yes'>  </span>(or<span style='mso-spacerun:yes'>  </span>DCT_PCT)<span style='mso-spacerun:yes'>  </span>is</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>selected</span>, the user can chose to quantize the DC term or not.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>If the user wants to perform compression by specifying their</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>own</span> codebook and vector sizes, the 'Customize' button offers</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>such</span> flexibility. After clicking that button <span
class=GramE>a<span style='mso-spacerun:yes'>  </span>window</span><span style='mso-spacerun:yes'>  </span>will</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>appear</span>, and the user can choose the transform (DCT, PCT_DCT,</pre><pre><span style='mso-spacerun:yes'>     </span>WAVELET, PCT_WAVELET), <span
class=GramE>the<span style='mso-spacerun:yes'>  </span>default</span><span style='mso-spacerun:yes'>  </span>algorithmic<span style='mso-spacerun:yes'>  </span>parameters</pre><pre><span style='mso-spacerun:yes'>     </span>(<span
class=GramE>VQ1<span style='mso-spacerun:yes'>  </span>~</span><span style='mso-spacerun:yes'>  </span>VQ4), the data type for the codebook, and the remap</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>type</span> (if data type<span style='mso-spacerun:yes'>  </span>is<span style='mso-spacerun:yes'>  </span>BYTE).<span style='mso-spacerun:yes'>   </span><span
class=GramE>The<span style='mso-spacerun:yes'>  </span>user</span><span style='mso-spacerun:yes'>  </span>can<span style='mso-spacerun:yes'>  </span>modify<span style='mso-spacerun:yes'>  </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>default</span> parameters in the table as desired.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>If the input image is not with size of power of 2<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>it</span><span style='mso-spacerun:yes'>  </span>will</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>be</span> zero padded.<span style='mso-spacerun:yes'>  </span>If the input image is not a color image and</pre><pre><span style='mso-spacerun:yes'>     </span>PCT is chosen as pre-process, <span
class=GramE>an</span> warning will occur.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>     </span>None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE><span
class=GramE>xvq</span></span><span class=GramE> :</span> 1 on success, 0 on failure</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>HISTORY</h2>

<pre><span style='mso-spacerun:yes'>     </span>History information recorded:</pre><pre><span style='mso-spacerun:yes'>      </span>1: When performing DCT, DCT history is recorded. Also the</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>parameters</span> of &lt;file type&gt;, &lt;remap type&gt;, &lt;dc&gt; and some</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>necessary</span> data regarding to decompression are recorded;</pre><pre><span style='mso-spacerun:yes'>      </span>2: When performing PCT_DCT, PCT history and DCT history are</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>recorded</span> sequentially. Also the parameters of</pre><pre><span style='mso-spacerun:yes'>         </span>&lt;<span
class=GramE>file</span> type&gt;, &lt;remap type&gt;, &lt;dc&gt; and some necessary data</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>regarding</span> to decompression are recorded;</pre><pre><span style='mso-spacerun:yes'>      </span>3: When performing WAVELET, WAVELET history is recorded.</pre><pre><span style='mso-spacerun:yes'>         </span>Also the parameters of &lt;file type&gt;, &lt;remap type&gt;, &lt;dc&gt;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>and</span> some necessary data regarding to decompression are</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>recorded</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>4: When performing PCT_WAVELET, PCT history and WAVELET</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>history</span> are recorded sequentially. Also the parameters</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>of</span> &lt;file type&gt;, &lt;remap type&gt;, &lt;dc&gt; and some necessary</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>data</span> regarding to decompression are recorded;</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>     </span>NONE</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>types.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>stat.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtoolkit.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPconvert.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPimage.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtransform.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>vector_quant</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> main() {</pre><pre><span style='mso-spacerun:yes'>         </span>Image *<span
class=SpellE>cvipImage</span>, *<span class=SpellE>outImage</span>;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span> *<span class=SpellE>inputfile,outfile</span>;</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>char</span> <span class=SpellE>temp_file</span>=&quot;<span
class=SpellE>temp_file</span>&quot;;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>setDisplay_<span class=GramE>Image</span></span><span class=GramE>(</span>&quot;picture&quot;, &quot;Default&quot;);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Input File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>inputfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>read_Image</span>(<span
class=SpellE>inputfile</span>, 1);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, <span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Compressed File Name:&quot;);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=SpellE><span class=GramE>outfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>         </span>/* <span
class=GramE>The</span> following command will compress the input image</pre><pre><span style='mso-spacerun:yes'>         </span>PCT_DCT domain as pre-process, and compression <span
class=GramE>ratio<span style='mso-spacerun:yes'>  </span>at</span></pre><pre><span style='mso-spacerun:yes'>     </span>20:1 */</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>if</span> (<span class=SpellE>outImage</span>=<span class=SpellE>xvq</span>(<span
class=SpellE>cvipImage</span>, 2, 4, <span class=SpellE>temp_file</span>, 2, 1, 1)&lt;0)</pre><pre><span style='mso-spacerun:yes'>     </span>{</pre><pre><span style='mso-spacerun:yes'>          </span><span
class=SpellE>error_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;<span
class=SpellE>xvq</span>&quot;, &quot;compression failed&quot;);</pre><pre><span style='mso-spacerun:yes'>             </span><span
class=GramE>exit(</span>1);</pre><pre><span style='mso-spacerun:yes'>         </span>} else <span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>outImage</span>, <span class=SpellE>outputfile</span>);</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>free(</span><span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>         </span><span
class=GramE>free(</span><span class=SpellE>outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>         </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>vector_quant</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'>   </span>Copyright (C) 1999, 2004 SIUE - by Scott E. Umbaugh<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>Lu</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>Guo</span><span style='mso-spacerun:yes'>  </span>and</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>Yue</span> Cheng.</pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
