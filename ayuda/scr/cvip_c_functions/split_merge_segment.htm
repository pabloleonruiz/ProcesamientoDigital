<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="split_merge_segment_files/filelist.xml">
<title>split_merge_segment</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="City"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2004-06-05T01:10:00Z</o:Created>
  <o:LastSaved>2004-10-20T00:17:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1409</o:Words>
  <o:Characters>8035</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>66</o:Lines>
  <o:Paragraphs>18</o:Paragraphs>
  <o:CharactersWithSpaces>9426</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(292);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fsplit_merge_segment.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>split_merge_segment</span> - Setup for <st1:City><st1:place>Split</st1:place></st1:City> and Merge Segmentation</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>stdio.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>stdlib.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtoolkit.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>split_merge.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtexture.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>   </span><span style='mso-spacerun:yes'>   </span>Image *<span
class=SpellE>split_merge_<span class=GramE>segment</span></span><span
class=GramE>(</span>Image *<span class=SpellE>imgP</span>, unsigned <span
class=SpellE>int</span> level,</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>unsigned<span style='mso-spacerun:yes'>  </span><span class=SpellE>int</span></span><span style='mso-spacerun:yes'>  </span>choice,<span style='mso-spacerun:yes'>   </span>void<span style='mso-spacerun:yes'>   </span>*parameters,<span style='mso-spacerun:yes'>   </span>CVIP_BOOLEAN</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>Run_PCT</span>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>Image *<span
class=SpellE>multi_resolution_<span class=GramE>segment</span></span><span
class=GramE>(</span>Image *<span class=SpellE>imgP</span>,</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>unsigned<span style='mso-spacerun:yes'>  </span><span class=SpellE>int</span></span><span style='mso-spacerun:yes'>  </span>choice,<span style='mso-spacerun:yes'>   </span>void<span style='mso-spacerun:yes'>   </span>*parameters,<span style='mso-spacerun:yes'>   </span>CVIP_BOOLEAN</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>Run_PCT</span>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>srcImage</span></span>&gt; - pointer to source Image structure</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>level</span>&gt; - the level to begin procedure</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>choice</span>&gt; - Predicate test chosen</pre><pre><span style='mso-spacerun:yes'>         </span>(1) <span
class=GramE>pure</span> uniformity</pre><pre><span style='mso-spacerun:yes'>         </span>(2) <span
class=GramE>local</span> mean vs. global</pre><pre><span style='mso-spacerun:yes'>         </span>(3) <span
class=GramE>local</span> std. deviation vs. global mean</pre><pre><span style='mso-spacerun:yes'>         </span>(4) Number of pixels within 2 x standard deviation</pre><pre><span style='mso-spacerun:yes'>         </span>(5) Weighted gray level distance test</pre><pre><span style='mso-spacerun:yes'>         </span>(6) Texture Homogeneity Test</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>parameters</span>&gt; - Parameters used determined by predicate test</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>Run_PCT</span>&gt; - Choice to run PCT on color images</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>QUAD_LIST <span
class=SpellE>split_merge_<span class=GramE>generic</span></span><span
class=GramE>(</span>Image *<span class=SpellE>srcImage</span>,</pre><pre><span style='mso-spacerun:yes'>      </span>CVIP_BOOLEAN (*const pt<span
class=GramE>)(</span>Image *, QUAD *, void *),</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> *<span class=SpellE>pt_paramP</span>, unsigned <span
class=SpellE>int</span> level)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>srcImage</span></span>&gt; - pointer to source Image structure</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>pt</span>&gt; - pointer to the homogeneity test function</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>pt_paramP</span>&gt; - pointer to the parameters required by &lt;pt&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>level</span>&gt; - the level to begin procedure</pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$<span class=SpellE>CVIPtoolsHOME\CVIPC\SEGMENTATION\split_merge.c</span>,</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>splitnMerge.c</span></span><span class=GramE>(</span><span
class=SpellE>split_merge_generic</span>)</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE>split_merge_<span
class=GramE>generic</span></span><span class=GramE><span style='mso-spacerun:yes'>  </span>is</span><span style='mso-spacerun:yes'>   </span>the<span style='mso-spacerun:yes'>   </span>basic<span style='mso-spacerun:yes'>   </span>function<span style='mso-spacerun:yes'>   </span>for<span style='mso-spacerun:yes'>   </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>split_and_<span class=GramE>merge</span></span><span class=GramE><span style='mso-spacerun:yes'>  </span>algorithm</span>.<span style='mso-spacerun:yes'>   </span><span
class=GramE>A<span style='mso-spacerun:yes'>  </span>homogeneity</span> test is used to</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>determine</span> if the Region of Interest is homogeneous, if it is</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>then<span style='mso-spacerun:yes'>  </span>all</span><span style='mso-spacerun:yes'>  </span>the pixels in that region are replaced with their</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>average</span> (in the segmented image).</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The level to begin the split and <span
class=GramE>merge<span style='mso-spacerun:yes'>  </span>is</span><span style='mso-spacerun:yes'>  </span>related<span style='mso-spacerun:yes'>  </span>to<span style='mso-spacerun:yes'>  </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>size<span style='mso-spacerun:yes'>  </span>of</span> the beginning region, specifically, the smaller the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>number</span> the larger the beginning region.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The chosen homogeneity test is the test that is <span
class=GramE>to<span style='mso-spacerun:yes'>  </span>be</span><span style='mso-spacerun:yes'>  </span>used</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>throughout</span> the split and merge segmentation process.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>split_merge_segment</span></span> is the most frequently<span style='mso-spacerun:yes'>  </span>used<span style='mso-spacerun:yes'>  </span>one<span style='mso-spacerun:yes'>  </span>among</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the<span style='mso-spacerun:yes'>  </span>three</span><span style='mso-spacerun:yes'>  </span>functions,<span style='mso-spacerun:yes'>  </span>which provides six <span
class=SpellE>homgeneity</span> tests.</pre><pre><span style='mso-spacerun:yes'>     </span>Some of the tests require additional parameters, The 6 tests</pre><pre><span style='mso-spacerun:yes'>     </span>(<span
class=GramE>and</span> their additional parameter descriptions) available are:</pre><pre><span style='mso-spacerun:yes'>          </span>(1) Pure Uniformity:<span style='mso-spacerun:yes'>  </span>Region is <span
class=GramE>considered<span style='mso-spacerun:yes'>  </span>homogeneous</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>if<span style='mso-spacerun:yes'>  </span>the</span><span style='mso-spacerun:yes'>  </span>region<span style='mso-spacerun:yes'>  </span>is<span style='mso-spacerun:yes'>  </span>completely uniform, i.e. all the pixels</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>have</span> the same gray value. <span class=GramE>(Additional Parameters - None).</span></pre><pre><span style='mso-spacerun:yes'>          </span>(2) Local Mean vs. Global Mean:<span style='mso-spacerun:yes'>  </span><span
class=GramE>Region<span style='mso-spacerun:yes'>  </span>is</span><span style='mso-spacerun:yes'>  </span>considered</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>homogeneous<span style='mso-spacerun:yes'>  </span>if</span><span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>local<span style='mso-spacerun:yes'>  </span>mean is greater than the global</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>mean</span>. <span class=GramE>(Additional Parameters - None).</span></pre><pre><span style='mso-spacerun:yes'>          </span>(3) Local Standard Deviation vs. <span
class=GramE>Global<span style='mso-spacerun:yes'>  </span>Mean</span>:<span style='mso-spacerun:yes'>   </span>Region</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>is</span> considered homogeneous if the local standard deviation is</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>less</span> than 10% of the global mean. (<span class=GramE>Additional<span style='mso-spacerun:yes'>  </span>Parameters</span><span style='mso-spacerun:yes'>  </span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>None).</span></pre><pre><span style='mso-spacerun:yes'>          </span>(4) Variance Test:<span style='mso-spacerun:yes'>  </span>Region is considered homogeneous if</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>at<span style='mso-spacerun:yes'>  </span>least</span><span style='mso-spacerun:yes'>  </span>X%<span style='mso-spacerun:yes'>  </span>of the pixels are within 2 sigma of the local</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>mean</span>, unless the standard deviation exceeds a maximum <span
class=SpellE>thres</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>hold</span>. (Additional Parameters - 'X' percentage (float *) e.g.</pre><pre><span style='mso-spacerun:yes'>     </span>X = .80 for 80%, Threshold (float *) e.g. 80)</pre><pre><span style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'>        </span>(5)<span style='mso-spacerun:yes'>  </span><span
class=GramE>Weighted<span style='mso-spacerun:yes'>  </span>Gray</span><span style='mso-spacerun:yes'>  </span>Level<span style='mso-spacerun:yes'>  </span>Distance<span style='mso-spacerun:yes'>  </span>Test:<span style='mso-spacerun:yes'>   </span>A<span style='mso-spacerun:yes'>   </span>total</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>weighted<span style='mso-spacerun:yes'>  </span>gray</span> level value is computed based on the mode and</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> gray level distance from the mode weighted by<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>gray</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>level</span> distribution.<span style='mso-spacerun:yes'>  </span>If this value is less than a threshold,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>then</span> they region<span style='mso-spacerun:yes'>  </span>is<span style='mso-spacerun:yes'>  </span>considered<span style='mso-spacerun:yes'>  </span>homogeneous.<span style='mso-spacerun:yes'>   </span>(Additional</pre><pre><span style='mso-spacerun:yes'>     </span>Parameters - Threshold (float *) e.g. 30)</pre><pre><span style='mso-spacerun:yes'>          </span>(6) Texture Homogeneity test:<span style='mso-spacerun:yes'>  </span>Compares <span
class=GramE>the<span style='mso-spacerun:yes'>  </span>four</span><span style='mso-spacerun:yes'>  </span>qua-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>drants</span></span><span class=GramE><span style='mso-spacerun:yes'>  </span>of</span> the Region, using 5 of the textural features (See</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>GUI_Texture_<span class=GramE>SetUp</span></span><span
class=GramE>(</span>...)), if the<span style='mso-spacerun:yes'>  </span>quadrants<span style='mso-spacerun:yes'>  </span>are<span style='mso-spacerun:yes'>  </span>similar<span style='mso-spacerun:yes'>  </span>to</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>each<span style='mso-spacerun:yes'>  </span>other</span> then the region is considered homogenous. (<span
class=SpellE>Addi</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>tional</span></span> Parameters - Similarity measure (float *)<span style='mso-spacerun:yes'>  </span>e.g.<span style='mso-spacerun:yes'>  </span>.40,</pre><pre><span style='mso-spacerun:yes'>     </span>Pixel distance (float *) e.g. 3)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>To choose the homogeneity test, pass the number of the test.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>&lt;<span
class=GramE>parameters</span>&gt; refer to the parameters as illustrated<span style='mso-spacerun:yes'>  </span>in<span style='mso-spacerun:yes'>  </span>the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>test</span> descriptions above.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>&lt;<st1:stockticker>RUN</st1:stockticker>_PCT&gt;: if the image is a multi-band image and RUN_PCT is</pre><pre><span style='mso-spacerun:yes'>     </span>CVIP_YES<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>a</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>PCT_Image</span>(...)<span style='mso-spacerun:yes'>  </span>will<span style='mso-spacerun:yes'>  </span>be<span style='mso-spacerun:yes'>  </span>done on the image to</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>transform</span> it down to a single band image, prior to doing the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>split</span> and merge segmentation. If <st1:stockticker>RUN</st1:stockticker>_PCT is CVIP_NO then the</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>split</span> and merge segmentation will be performed on each band,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>all</span> bands must pass the homogeneity test in order to be con-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>sidered</span></span> homogeneous.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>multi_resolution_segment</span></span><span style='mso-spacerun:yes'>   </span>is<span style='mso-spacerun:yes'>   </span>exactly<span style='mso-spacerun:yes'>    </span>the<span style='mso-spacerun:yes'>    </span>same<span style='mso-spacerun:yes'>    </span>as</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>split_merge_segment</span><span class=GramE>,<span style='mso-spacerun:yes'>  </span>except</span> that the level is fixed to 0 in</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>multi_resolution_segment</span></span><span
class=GramE>.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>     </span>Runs <span class=GramE>somewhat<span style='mso-spacerun:yes'>  </span>slowly</span><span style='mso-spacerun:yes'>  </span>dependent<span style='mso-spacerun:yes'>  </span>on<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>homogeneity<span style='mso-spacerun:yes'>  </span>test</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>chosen</span>.<span style='mso-spacerun:yes'>  </span>The weighted Gray level distance test is noticeably</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>slower</span> than the first 4 tests.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The Texture Test runs extremely slow compared to the other 5</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>tests</span>,<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>more<span style='mso-spacerun:yes'>  </span>non-homogeneous<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>image the slower it</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>runs</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The Texture Test also does a very poor job of memory manage-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>ment</span></span>.<span style='mso-spacerun:yes'>   </span><span
class=GramE>Will<span style='mso-spacerun:yes'>  </span>consume</span><span style='mso-spacerun:yes'>  </span>a large amount of memory and then not</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>release</span> it until the entire program<span style='mso-spacerun:yes'>  </span>is<span style='mso-spacerun:yes'>  </span>exited.<span style='mso-spacerun:yes'>   </span><span
class=GramE>The<span style='mso-spacerun:yes'>  </span>more</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>non-homogeneous</span> the image the more memory is consumed.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>     </span>#include &lt;<span
class=SpellE>stdio.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>     </span>#include &lt;<span
class=SpellE>stdlib.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>     </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>     </span>#include &quot;<span
class=SpellE>CVIPtoolkit.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>     </span>#include &quot;<span
class=SpellE>split_merge.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>     </span>#include &quot;<span
class=SpellE>CVIPtexture.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>typedef</span></span> <span class=SpellE>struct</span><span style='mso-spacerun:yes'>  </span>{</pre><pre><span style='mso-spacerun:yes'>      </span>/* [0] -&gt; 0 degree, [1] -&gt; 45 degree, [2] -&gt; 90 degree, [3] -&gt; 135 degree, [4] -&gt; average, [5] -&gt; range (max - min) */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> ASM[6];<span style='mso-spacerun:yes'>          </span>/*<span style='mso-spacerun:yes'>  </span>(1) Angular Second Moment */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> contrast[6];<span style='mso-spacerun:yes'>     </span>/*<span style='mso-spacerun:yes'>  </span>(2) Contrast */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> correlation[6];<span style='mso-spacerun:yes'>  </span>/*<span style='mso-spacerun:yes'>  </span>(3) Correlation */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> variance[6];<span style='mso-spacerun:yes'>     </span>/*<span style='mso-spacerun:yes'>  </span>(4) Variance */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> IDM[6];<span style='mso-spacerun:yes'>          </span>/*<span style='mso-spacerun:yes'>  </span>(5) Inverse <span
class=SpellE>Diffenence</span> Moment */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> <span class=SpellE>sum_avg</span>[6];<span style='mso-spacerun:yes'>      </span>/*<span style='mso-spacerun:yes'>  </span>(6) Sum Average */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> <span class=SpellE>sum_var</span>[6];<span style='mso-spacerun:yes'>      </span>/*<span style='mso-spacerun:yes'>  </span>(7) Sum Variance */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> <span class=SpellE>sum_entropy</span>[6];<span style='mso-spacerun:yes'>  </span>/*<span style='mso-spacerun:yes'>  </span>(8) Sum Entropy */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> entropy[6];<span style='mso-spacerun:yes'>      </span>/*<span style='mso-spacerun:yes'>  </span>(9) Entropy */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> <span class=SpellE>diff_var</span>[6];<span style='mso-spacerun:yes'>     </span>/* (10) Difference Variance */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> <span class=SpellE>diff_entropy</span>[6]; /* (11) <span
class=SpellE>Diffenence</span> Entropy */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> meas_corr1[6];<span style='mso-spacerun:yes'>   </span>/* (12) Measure of Correlation 1 */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> meas_corr2[6];<span style='mso-spacerun:yes'>   </span>/* (13) Measure of Correlation 2 */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>float</span> <span class=SpellE>max_corr_coef</span>[6];/* (14) Maximal Correlation Coefficient */</pre><pre><span style='mso-spacerun:yes'>      </span>} TEXTURE;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>typedef</span></span> <span class=SpellE>struct</span> {</pre><pre><span style='mso-spacerun:yes'>      </span>/* <span
class=GramE>Allows</span> the user to choose which features to extract, a zero will cause</pre><pre><span style='mso-spacerun:yes'>        </span><span
class=GramE>the</span> feature to be ignored, the returned feature value will be 0.0 */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> ASM;<span style='mso-spacerun:yes'>               </span>/*<span style='mso-spacerun:yes'>  </span>(1) Angular Second Moment */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> contrast;<span style='mso-spacerun:yes'>          </span>/*<span style='mso-spacerun:yes'>  </span>(2) Contrast */</pre><pre><span style='mso-spacerun:yes'>    </span><span style='mso-spacerun:yes'>  </span><span
class=SpellE><span class=GramE>int</span></span> correlation;<span style='mso-spacerun:yes'>       </span>/*<span style='mso-spacerun:yes'>  </span>(3) Correlation */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> variance;<span style='mso-spacerun:yes'>          </span>/*<span style='mso-spacerun:yes'>  </span>(4) Variance */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> IDM;<span style='mso-spacerun:yes'>               </span>/*<span style='mso-spacerun:yes'>  </span>(5) Inverse <span
class=SpellE>Diffenence</span> Moment */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>sum_avg</span>;<span style='mso-spacerun:yes'>           </span>/*<span style='mso-spacerun:yes'>  </span>(6) Sum Average */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>sum_var</span>;<span style='mso-spacerun:yes'>           </span>/*<span style='mso-spacerun:yes'>  </span>(7) Sum Variance */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>sum_entropy</span>;<span style='mso-spacerun:yes'>       </span>/*<span style='mso-spacerun:yes'>  </span>(8) Sum Entropy */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> entropy;<span style='mso-spacerun:yes'>           </span>/*<span style='mso-spacerun:yes'>  </span>(9) Entropy */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>diff_var</span>;<span style='mso-spacerun:yes'>          </span>/* (10) Difference Variance<span style='mso-spacerun:yes'>  </span>*/</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>diff_entropy</span>;<span style='mso-spacerun:yes'>      </span>/* (11) <span
class=SpellE>Diffenence</span> Entropy<span style='mso-spacerun:yes'>  </span>*/</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> meas_corr1;<span style='mso-spacerun:yes'>  </span><span style='mso-spacerun:yes'>      </span>/* (12) Measure of Correlation 1 */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> meas_corr2;<span style='mso-spacerun:yes'>        </span>/* (13) Measure of Correlation 2 */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>max_corr_coef</span>;<span style='mso-spacerun:yes'>     </span>/* (14) Maximal Correlation Coefficient */</pre><pre><span style='mso-spacerun:yes'>      </span>} TEXTURE_FEATURE_MAP;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>typedef</span></span> <span class=SpellE>struct</span> quad <span
class=SpellE>QUAD</span>;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>struct</span></span> quad {<span style='mso-spacerun:yes'>  </span>/* quadrant definitions */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>byte</span> data[3];</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>unsigned</span> <span class=SpellE>int</span> x;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>unsigned</span> <span class=SpellE>int</span> y;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>unsigned</span> <span class=SpellE>int</span> <span class=SpellE>dx</span>;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>unsigned</span> <span class=SpellE>int</span> <span class=SpellE>dy</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>QUAD *<span
class=SpellE>lower_right</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>QUAD *<span
class=SpellE>lower_left</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>QUAD *<span
class=SpellE>upper_right</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>QUAD *<span
class=SpellE>upper_left</span>;</pre><pre><span style='mso-spacerun:yes'>     </span>};</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>typedef</span></span> <span class=SpellE>struct</span> stack <span
class=SpellE>STACK</span>;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>struct</span></span> stack {</pre><pre><span style='mso-spacerun:yes'>      </span>QUAD *key;</pre><pre><span style='mso-spacerun:yes'>      </span>STACK *next;</pre><pre><span style='mso-spacerun:yes'>     </span>} ;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>typedef</span></span> <span class=SpellE>struct</span> <span
class=SpellE>quad_list_item</span>* QUAD_LIST;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>struct</span></span> <span class=SpellE>quad_list_item</span> {</pre><pre><span style='mso-spacerun:yes'>      </span>QUAD *q;</pre><pre><span style='mso-spacerun:yes'>      </span>QUAD_LIST next;</pre><pre><span style='mso-spacerun:yes'>     </span>};</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span>Pointer to Image <span
class=GramE>structure<span style='mso-spacerun:yes'>  </span>containing</span><span style='mso-spacerun:yes'>  </span>segmented<span style='mso-spacerun:yes'>  </span>image<span style='mso-spacerun:yes'>  </span>on</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>success</span>; a NULL pointer on failure.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>HISTORY</h2>

<pre><span style='mso-spacerun:yes'>     </span>History information recorded: None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>     </span>The<span style='mso-spacerun:yes'>   </span>following<span style='mso-spacerun:yes'>   </span>example<span style='mso-spacerun:yes'>   </span>uses<span style='mso-spacerun:yes'>    </span>the<span style='mso-spacerun:yes'>    </span>setup<span style='mso-spacerun:yes'>    </span>function</pre><pre><span style='mso-spacerun:yes'>     </span>&quot;<span
class=SpellE>split_merge_setup</span><span class=GramE>&quot;<span style='mso-spacerun:yes'>  </span>to</span><span style='mso-spacerun:yes'>  </span>get<span style='mso-spacerun:yes'>  </span>keyboard input for the <span
class=SpellE>parame</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>ters</span></span>. Refer $CVIPHOME/<span
class=SpellE>split_merge.c</span> <span class=GramE>for<span style='mso-spacerun:yes'>  </span>more</span><span style='mso-spacerun:yes'>  </span>detail<span style='mso-spacerun:yes'>  </span>about</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>the</span> function.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPtoolkit.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPdef.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPconvert.h</span>&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &quot;<span
class=SpellE>CVIPsegment.h</span>&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> main()</pre><pre><span style='mso-spacerun:yes'>      </span>{</pre><pre><span style='mso-spacerun:yes'>      </span>Image *<span
class=SpellE>cvipImage</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>IMAGE_FORMAT format;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>char</span> *<span class=SpellE>inputfile</span>, *<span
class=SpellE>outputfile</span>;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>setDisplay_<span class=GramE>Image</span></span><span class=GramE>(</span>&quot;picture&quot;, &quot;Default&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;0Enter the Input File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>inputfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>format</span> = <span class=SpellE>getFormat_CVIP</span>(<span
class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>read_Image</span>(<span
class=SpellE>inputfile</span>, 1);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, <span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = (Image *) <span
class=SpellE>split_merge_setup</span>(<span class=SpellE>cvipImage</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;0Enter the Output File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>outputfile</span></span> = <span class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, <span class=SpellE>outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>write_<span class=GramE>Image</span></span><span class=GramE>(</span>cvipImage,outputfile,CVIP_NO,CVIP_NO,format,1);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>free(</span><span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>free(</span><span class=SpellE>outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>SEGMENTATION library, <span
class=SpellE>predicate_test</span>, quadtree2ras</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1996, 2004 SIUE - by Scott E. Umbaugh<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>Greg</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>Hance</span>,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>and</span> Steven M. Costello.</pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
