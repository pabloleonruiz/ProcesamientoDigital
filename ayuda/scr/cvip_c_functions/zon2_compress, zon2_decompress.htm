<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="zon2_compress,%20zon2_decompress_files/filelist.xml">
<title>zon2_compress,zon2_decompress</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="stockticker"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2004-06-05T01:44:00Z</o:Created>
  <o:LastSaved>2004-10-20T00:21:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>513</o:Words>
  <o:Characters>2927</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>24</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>3434</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(320);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIP_C_functions%2Fzon2_compress%2C+zon2_decompress.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>     </span>zon2_compress, zon2_decompress - compress and <span
class=GramE>uncompress<span style='mso-spacerun:yes'>  </span>an</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>image</span> using zonal coding</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>     </span><span class=SpellE><span
class=GramE>int</span></span> zon2_compress(Image * <span class=SpellE>inputImage</span>,<span style='mso-spacerun:yes'>  </span>char<span style='mso-spacerun:yes'>  </span>*filename,<span style='mso-spacerun:yes'>  </span><span
class=SpellE>int</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>block_size</span>, <span class=SpellE>int</span> choice, <span
class=SpellE>int</span> <span class=SpellE>mask_type</span>, float <span
class=SpellE>compress_ratio</span>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE><span class=GramE>inputImage</span></span>&gt; - pointer to an image</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>filename</span>&gt; - pointer to a character array</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>block_size</span>&gt; - a power of 2; kernel size is &lt;<span
class=SpellE>block_size</span>&gt;^2</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>choice</span>&gt; - transform to use:</pre><pre><span style='mso-spacerun:yes'>                     </span>1=FFT 2=DCT 3=Walsh 4=<span
class=SpellE>Hadamard</span></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>mask_type</span>&gt; - type of kernel to use:</pre><pre><span style='mso-spacerun:yes'>                     </span>1=triangle 2=square 3=circle</pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=SpellE>compress_ratio</span>&gt; - compression ratio, from 1.0 (min)</pre><pre><span style='mso-spacerun:yes'>                         </span><span
class=GramE>to</span> (<span class=SpellE>block_size</span>*block_size/4) (max)</pre><pre><span style='mso-spacerun:yes'>                         </span><span
class=GramE>for</span> all kinds of transforms</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>Image * zon2_<span
class=GramE>decompress(</span>char * filename)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span>&lt;<span
class=GramE>filename</span>&gt; - pointer to a character array</pre>

<h2><st1:stockticker>PATH</st1:stockticker></h2>

<pre><span style='mso-spacerun:yes'>     </span>$CVIPtoolsHOME\CVIPC\COMPRESSION\zonal2.c</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>     </span>The <span class=GramE>program<span style='mso-spacerun:yes'>  </span>consists</span><span style='mso-spacerun:yes'>  </span>of<span style='mso-spacerun:yes'>  </span>two<span style='mso-spacerun:yes'>  </span>parts:<span style='mso-spacerun:yes'>  </span>zon2_compress()<span style='mso-spacerun:yes'>  </span>and</pre><pre><span style='mso-spacerun:yes'>     </span>zon2_<span
class=GramE>decompress(</span>).<span style='mso-spacerun:yes'>    </span>zon2_<span
class=GramE>compress(</span>)<span style='mso-spacerun:yes'>   </span>first<span style='mso-spacerun:yes'>   </span>performs<span style='mso-spacerun:yes'>   </span>a</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>selected</span> transform<span style='mso-spacerun:yes'>  </span>on<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>input<span style='mso-spacerun:yes'>  </span>image,<span style='mso-spacerun:yes'>  </span>forms<span style='mso-spacerun:yes'>  </span>a<span style='mso-spacerun:yes'>  </span>kernel</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>according</span><span style='mso-spacerun:yes'>    </span>to<span style='mso-spacerun:yes'>    </span>arguments<span style='mso-spacerun:yes'>   </span><span
class=SpellE>block_size</span>,<span style='mso-spacerun:yes'>   </span><span
class=SpellE>mask_type</span><span style='mso-spacerun:yes'>   </span>and</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE>compress_<span class=GramE>ratio</span></span><span class=GramE>,</span> then uses the kernel to sample the transform</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>of<span style='mso-spacerun:yes'>  </span>the</span><span style='mso-spacerun:yes'>  </span>input<span style='mso-spacerun:yes'>  </span>image,<span style='mso-spacerun:yes'>  </span>maps<span style='mso-spacerun:yes'>  </span>the<span style='mso-spacerun:yes'>  </span>result<span style='mso-spacerun:yes'>  </span>to CVIP_BYTE data</pre><pre><span style='mso-spacerun:yes'>     </span>(<span
class=GramE>unsigned</span> char) and stores them in the file filename.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>zon2_<span
class=GramE>decompress(</span>)<span style='mso-spacerun:yes'>   </span>performs<span style='mso-spacerun:yes'>   </span>the<span style='mso-spacerun:yes'>   </span>inverse<span style='mso-spacerun:yes'>   </span>process<span style='mso-spacerun:yes'>    </span>of</pre><pre><span style='mso-spacerun:yes'>     </span>zon2_<span
class=GramE>compress(</span>).</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>The difference between <span
class=SpellE>zon_<span class=GramE>compress</span></span><span class=GramE>(</span>) and zon2_compress() is</pre><pre><span style='mso-spacerun:yes'>    </span><span style='mso-spacerun:yes'> </span><span
class=GramE>that<span style='mso-spacerun:yes'>  </span>in</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>zon_compress</span>(),<span style='mso-spacerun:yes'>  </span>the DC component is included into</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>local</span> remapping; while it is not included in zon2_compress()</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>coding</span>.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>TYPES AND C<st1:stockticker>ONST</st1:stockticker>ANTS</h2>

<pre><span style='mso-spacerun:yes'>     </span>None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>RETURN VALUES</h2>

<pre><span style='mso-spacerun:yes'>     </span>zon2_compress: 0 on success, -1 on failure</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>     </span>zon2_decompression: an uncompressed <span
class=GramE>image<span style='mso-spacerun:yes'>  </span>pointer</span><span style='mso-spacerun:yes'>  </span>on<span style='mso-spacerun:yes'>  </span><span
class=SpellE>suc</span>-</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=SpellE><span class=GramE>cess</span></span>, a NULL pointer on failure</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>HISTORY</h2>

<pre><span style='mso-spacerun:yes'>     </span>History information recorded: None</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DIAGNOSTICS</h2>

<pre><span style='mso-spacerun:yes'>     </span>The input image is a real image, it can be <span
class=SpellE>multi_band</span> and of</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>any</span><span style='mso-spacerun:yes'>    </span>of<span style='mso-spacerun:yes'>   </span>these<span style='mso-spacerun:yes'>   </span>data<span style='mso-spacerun:yes'>   </span>types:<span style='mso-spacerun:yes'>   </span>CVIP_BYTE,<span style='mso-spacerun:yes'>   </span>CVIP_SHORT,</pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>CVIP_INTEGER, CVIP_FLOAT or CVIP_DOUBLE.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>EXAMPLE</h2>

<pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPtoolkit.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPimage.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPdef.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPconvert.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;<span
class=SpellE>CVIPview.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#include &lt;sys/<span
class=SpellE>types.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>     </span><span style='mso-spacerun:yes'> </span>#include &lt;sys/<span
class=SpellE>stat.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>      </span>#define VIEWER &quot;picture&quot;</pre><pre><span style='mso-spacerun:yes'>      </span>#define VIDEO_APP &quot;<span
class=SpellE>SunVideo</span> &amp;&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>void</span> main()</pre><pre><span style='mso-spacerun:yes'>      </span>{</pre><pre><span style='mso-spacerun:yes'>      </span>Image *<span
class=SpellE>cvipImage</span>;</pre><pre><span style='mso-spacerun:yes'>      </span>IMAGE_FORMAT format;</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>char</span> *<span class=SpellE>inputfile</span>,*<span
class=SpellE>outputfile</span>;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>setDisplay_<span class=GramE>Image</span></span><span class=GramE>(</span>VIEWER, &quot;Default&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the<span style='mso-spacerun:yes'>  </span>Input File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>inputfile</span></span> =(char *) <span
class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>format</span> = <span class=SpellE>getFormat_CVIP</span>(<span
class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span> = <span class=SpellE>read_Image</span>(inputfile,1);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage</span>, <span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>free(</span><span class=SpellE>inputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span>/* the following call performs the zonal coding of the</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>input</span> image with no dc <span class=SpellE>quantisation</span> */</pre><pre><span style='mso-spacerun:yes'>      </span>zon2_<span
class=GramE>compress(</span>cvipImage,&quot;file1&quot;,32,2,1,2);</pre><pre><span style='mso-spacerun:yes'>      </span>/* the following call performs the zonal decoding of the</pre><pre><span style='mso-spacerun:yes'>      </span>&quot;file1&quot; */</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>cvipImage</span></span><span class=GramE>=</span>zon2_decompress(&quot;file1&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>print_<span class=GramE>CVIP</span></span><span class=GramE>(</span>&quot;\n\t\<span
class=SpellE>tEnter</span> the Output File Name:<span style='mso-spacerun:yes'>  </span>&quot;);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE><span class=GramE>outputfile</span></span> = <span class=SpellE>getString_CVIP</span>();</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>view_<span class=GramE>Image</span></span><span class=GramE>(</span><span
class=SpellE>cvipImage,outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=SpellE>write_<span class=GramE>Image</span></span><span class=GramE>(</span>cvipImage,outputfile,CVIP_NO,CVIP_NO,format,1);</pre><pre><span style='mso-spacerun:yes'>      </span><span
class=GramE>free(</span><span class=SpellE>outputfile</span>);</pre><pre><span style='mso-spacerun:yes'>      </span>}</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>     </span>COMPRESSION library, <span
class=SpellE>zon_compress</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>     </span>Copyright (C) 1996, 2004 SIUE - by Scott E.<span style='mso-spacerun:yes'>  </span><span
class=GramE>Umbaugh<span style='mso-spacerun:yes'>  </span>and</span><span style='mso-spacerun:yes'>  </span><span
class=SpellE>Wenxing</span></pre><pre><span style='mso-spacerun:yes'>     </span><span
class=GramE>Li.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
