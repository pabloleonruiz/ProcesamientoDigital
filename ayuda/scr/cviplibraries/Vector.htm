<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=FrontPage.Editor.Document>
<meta name=Generator content="Microsoft FrontPage 4.0">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="Vector_files/filelist.xml">
<title>Vector</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>4</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2004-06-04T02:34:00Z</o:Created>
  <o:LastSaved>2004-07-12T22:54:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1240</o:Words>
  <o:Characters>7074</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>58</o:Lines>
  <o:Paragraphs>16</o:Paragraphs>
  <o:CharactersWithSpaces>8298</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(74);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIPlibraries%2FVector.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Vector - <span class=SpellE>CVIPtools</span> toolkit library for <span
class=GramE>performing<span style='mso-spacerun:yes'>&nbsp; </span>vector</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>algebra</span> and manipulation</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>#include &lt;<span
class=SpellE>CVIPvector.h</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>FUNCTIONS</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The following functions are included in this man page:</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>band2pixel_Vector</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>convolve_Vector</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>copy_Vector</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>findHisto_Vector</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>findMaxVal_Vector</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>findMinVal_Vector</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=SpellE>normalize_Vector</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pixel2band_Vector</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>printHisto_Vector</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>subSample_Vector</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The C files containing these functions are located under $<span
class=SpellE>CVIPtoolsHOME\CVIPC\VectorAlgebra</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>FEATURE EXTRACTION</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>double</span> <span class=SpellE>findMinVal_Vector</span>(void *a, unsigned length, CVIP_TYPE <span
class=SpellE>data_type</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<em><span
style='font-family:"Courier New"'>a</span></em>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>length</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>no</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>elements</span></em> <em><span
style='font-family:"Courier New"'>in</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>data</span></em>_<em><span
style='font-family:"Courier New"'>type</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>valid</span></em> <span class=SpellE><em><span
style='font-family:"Courier New"'>CVIPtools</span></em></span> <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>type</span></em> (<em><span style='font-family:"Courier New"'>i</span></em>.<em><span
style='font-family:"Courier New"'>e</span></em>. <em><span style='font-family:
"Courier New"'>one</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>CVIP</span></em>_<em><span style='font-family:
"Courier New"'>BYTE</span></em>, <em><span style='font-family:"Courier New"'>CVIP</span></em>_<em><span
style='font-family:"Courier New"'>SHORT</span></em>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><em><span
style='font-family:"Courier New"'>CVIP</span></em>_<em><span style='font-family:
"Courier New"'>INTEGER</span></em>, <em><span style='font-family:"Courier New"'>CVIP</span></em>_<em><span
style='font-family:"Courier New"'>FLOAT</span></em> <em><span style='font-family:
"Courier New"'>or</span></em> <em><span style='font-family:"Courier New"'>CVIP</span></em>_<em><span
style='font-family:"Courier New"'>DOUBLE</span></em>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: the minimum value in the span <span
class=GramE>of<span style='mso-spacerun:yes'>&nbsp; </span>the</span><span style='mso-spacerun:yes'>&nbsp; </span>vector<span style='mso-spacerun:yes'>&nbsp; </span>&lt;a&gt;.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description:<span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>Finds<span style='mso-spacerun:yes'>&nbsp; </span>the</span> minimum value in the span of a <span
class=SpellE>vec</span>-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>tor</span></span>. The value is returned as a floating point value of type</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>double</span>.<span style='mso-spacerun:yes'>&nbsp; </span>Author(s): Gregory <span
class=SpellE>Hance</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>double</span> <span class=SpellE>findMaxVal_Vector</span>(void *a, unsigned length, CVIP_TYPE <span
class=SpellE>data_type</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<em><span
style='font-family:"Courier New"'>a</span></em>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>length</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>no</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>elements</span></em> <em><span
style='font-family:"Courier New"'>in</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>data</span></em>_<em><span
style='font-family:"Courier New"'>type</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>valid</span></em> <span class=SpellE><em><span
style='font-family:"Courier New"'>CVIPtools</span></em></span> <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>type</span></em> (<em><span style='font-family:"Courier New"'>i</span></em>.<em><span
style='font-family:"Courier New"'>e</span></em>. <em><span style='font-family:
"Courier New"'>one</span></em> <em><span style='font-family:"Courier New"'>of</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><em><span
style='font-family:"Courier New"'>CVIP</span></em>_<em><span style='font-family:
"Courier New"'>BYTE</span></em>, <em><span style='font-family:"Courier New"'>CVIP</span></em>_<em><span
style='font-family:"Courier New"'>SHORT</span></em>, <em><span
style='font-family:"Courier New"'>CVIP</span></em>_<em><span style='font-family:
"Courier New"'>INTEGER</span></em>, <em><span style='font-family:"Courier New"'>CVIP</span></em>_<em><span
style='font-family:"Courier New"'>FLOAT</span></em> <em><span style='font-family:
"Courier New"'>or</span></em> <em><span style='font-family:"Courier New"'>CVIP</span></em>_<em><span
style='font-family:"Courier New"'>DOUBLE</span></em>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: the maximum value in the span <span
class=GramE>of<span style='mso-spacerun:yes'>&nbsp; </span>the</span><span style='mso-spacerun:yes'>&nbsp; </span>vector<span style='mso-spacerun:yes'>&nbsp; </span>&lt;a&gt;.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description:<span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>Finds<span style='mso-spacerun:yes'>&nbsp; </span>the</span> maximum value in the span of a <span
class=SpellE>vec</span>-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>tor</span></span>. The value is returned as a floating point value of type</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>double</span>.<span style='mso-spacerun:yes'>&nbsp; </span>Author(s): Gregory <span
class=SpellE>Hance</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>DATA REPRESENTATION</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>byte</span> **band2pixel_Vector(byte **<span class=SpellE>bandP</span>, unsigned <span
class=SpellE>int</span> <span class=SpellE>no_of_bands</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>unsigned</span> <span class=SpellE>int</span> <span class=SpellE>imgsize</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>bandP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>array</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>band</span></em> <em><span style='font-family:
"Courier New"'>vectors</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>no</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>bands</span></em></span>&gt; - <em><span style='font-family:
"Courier New"'>number</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>spectral</span></em> <em><span
style='font-family:"Courier New"'>bands</span></em> <em><span style='font-family:
"Courier New"'>in</span></em> <em><span style='font-family:"Courier New"'>image</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>(<span
class=GramE><em><span style='font-family:"Courier New"'>number</span></em></span> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>band</span></em> <em><span style='font-family:"Courier New"'>vectors</span></em>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>imgsize</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>size</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>image</span></em> (<em><span
style='font-family:"Courier New"'>length</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>each</span></em> <em><span style='font-family:"Courier New"'>band</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: pointer to array pixel vectors.<span style='mso-spacerun:yes'>&nbsp; </span>Description:<span style='mso-spacerun:yes'>&nbsp; </span>con-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>verts</span></span><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>a<span style='mso-spacerun:yes'>&nbsp; </span>band<span style='mso-spacerun:yes'>&nbsp; </span>vector<span style='mso-spacerun:yes'>&nbsp; </span>array<span style='mso-spacerun:yes'>&nbsp; </span>to<span style='mso-spacerun:yes'>&nbsp; </span>a<span style='mso-spacerun:yes'>&nbsp; </span>pixel<span style='mso-spacerun:yes'>&nbsp; </span>vector<span style='mso-spacerun:yes'>&nbsp; </span>array.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Author(s): Gregory <span
class=SpellE>Hance</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>byte</span> **pixel2band_Vector(byte **<span class=SpellE>pixP</span>, unsigned <span
class=SpellE>int</span> <span class=SpellE>no_of_bands</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>unsigned</span> <span class=SpellE>int</span> <span class=SpellE>imgsize</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>bandP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>array</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>pixel</span></em> <em><span style='font-family:
"Courier New"'>vectors</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>no</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>bands</span></em></span>&gt; - <em><span style='font-family:
"Courier New"'>number</span></em> <em><span style='font-family:"Courier New"'>spectral</span></em> <em><span
style='font-family:"Courier New"'>bands</span></em> <em><span style='font-family:
"Courier New"'>in</span></em> <em><span style='font-family:"Courier New"'>image</span></em> (<em><span
style='font-family:"Courier New"'>length</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>each</span></em> <em><span style='font-family:"Courier New"'>pixel</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>imgsize</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>size</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>image</span></em> (<em><span
style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>pixel</span></em> <em><span style='font-family:"Courier New"'>vectors</span></em>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: pointer to array pixel vectors.<span style='mso-spacerun:yes'>&nbsp; </span>Description:<span style='mso-spacerun:yes'>&nbsp; </span>con-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>verts</span></span><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>a<span style='mso-spacerun:yes'>&nbsp; </span>pixel<span style='mso-spacerun:yes'>&nbsp; </span>vector<span style='mso-spacerun:yes'>&nbsp; </span>array<span style='mso-spacerun:yes'>&nbsp; </span>to<span style='mso-spacerun:yes'>&nbsp; </span>a<span style='mso-spacerun:yes'>&nbsp; </span>band<span style='mso-spacerun:yes'>&nbsp; </span>vector<span style='mso-spacerun:yes'>&nbsp; </span>array.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Author(s): Gregory <span
class=SpellE>Hance</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> <span class=SpellE>copy_Vector</span>(void *<span
class=SpellE>avecP</span>, void *<span class=SpellE>bvecP</span>, unsigned <span
class=SpellE>int</span> <span class=SpellE>vdim</span>, CVIP_TYPE <span
class=SpellE>atype</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>CVIP_TYPE <span
class=SpellE>btype</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>avecP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em> <em><span style='font-family:"Courier New"'>A</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>bvecP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em> <em><span style='font-family:"Courier New"'>B</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>vdim</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>dimension</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>each</span></em> <em><span style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>atype</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>type</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>data</span></em> <em><span
style='font-family:"Courier New"'>pointed</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>by</span></em> <em><span style='font-family:"Courier New"'>vector</span></em> <em><span
style='font-family:"Courier New"'>A</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>btype</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>type</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>data</span></em> <em><span
style='font-family:"Courier New"'>pointed</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>by</span></em> <em><span style='font-family:"Courier New"'>vector</span></em> <em><span
style='font-family:"Courier New"'>B</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: nada.<span style='mso-spacerun:yes'>&nbsp; </span>Description: copies the contents of vector A</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>into<span style='mso-spacerun:yes'>&nbsp; </span>vector</span><span style='mso-spacerun:yes'>&nbsp; </span>B.<span style='mso-spacerun:yes'>&nbsp; </span>Handles all 25 different type combinations</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>of</span> A and B. NOTE: this function<span style='mso-spacerun:yes'>&nbsp; </span>simply<span style='mso-spacerun:yes'>&nbsp; </span>copies<span style='mso-spacerun:yes'>&nbsp; </span>one<span style='mso-spacerun:yes'>&nbsp; </span>vector</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>into<span style='mso-spacerun:yes'>&nbsp; </span>another</span>;<span style='mso-spacerun:yes'>&nbsp; </span>therefore copying a vector of a more precise</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>type</span> to that of a less precise type will work<span style='mso-spacerun:yes'>&nbsp; </span>properly<span style='mso-spacerun:yes'>&nbsp; </span>but</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>may<span style='mso-spacerun:yes'>&nbsp; </span>result</span> in garbage if the range of A is not inclusive of</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>that</span> of B.<span style='mso-spacerun:yes'>&nbsp; </span>Author(s): Gregory <span
class=SpellE>Hance</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> *<span class=SpellE>normalize_Vector</span>(void *<span
class=SpellE>srcvecP</span>, float *<span class=SpellE>normP</span>, CVIP_TYPE <span
class=SpellE>vecdtype</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>unsigned</span> <span class=SpellE>int</span> <span class=SpellE>no_of_vecs</span>, unsigned <span
class=SpellE>int</span> <span class=SpellE>vdim</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>srcvecP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>array</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>vectors</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>normP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>normalization</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>vecdtype</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>valid</span></em> <span class=SpellE><em><span
style='font-family:"Courier New"'>CVIPtools</span></em></span> <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>type</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>no</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>vecs</span></em></span>&gt; - <em><span style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>vectors</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: pointer to a normalized array of vectors.<span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE>Descrip</span>-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>tion</span></span>:<span style='mso-spacerun:yes'>&nbsp; </span>This function will normalize an array of vectors with</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>respect<span style='mso-spacerun:yes'>&nbsp; </span>to</span><span style='mso-spacerun:yes'>&nbsp; </span>the<span style='mso-spacerun:yes'>&nbsp; </span>normalization<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>vector<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>&lt;<span
class=SpellE>normP</span>&gt;.<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
class=GramE>(i.e.</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>srcvecP</span></span><span class=GramE>[</span>0]([0],[1],...,[vdim-1])/<span
class=SpellE>normP</span>[0],</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>srcvecP</span></span><span class=GramE>[</span>1]([0],[1],...,[vdim-1])/<span
class=SpellE>normP</span>[1].<span style='mso-spacerun:yes'>&nbsp; </span>If the data type</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>of<span style='mso-spacerun:yes'>&nbsp; </span>the</span><span style='mso-spacerun:yes'>&nbsp; </span>vectors<span style='mso-spacerun:yes'>&nbsp; </span>is<span style='mso-spacerun:yes'>&nbsp; </span>less<span style='mso-spacerun:yes'>&nbsp; </span>precise than &quot;float&quot; or equal to</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;<span
class=GramE>float</span>&quot; then the result will be type &quot;float&quot;. If <span
class=GramE>the<span style='mso-spacerun:yes'>&nbsp; </span>arrays</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>are<span style='mso-spacerun:yes'>&nbsp; </span>of</span><span style='mso-spacerun:yes'>&nbsp; </span>type<span style='mso-spacerun:yes'>&nbsp; </span>&quot;double&quot;<span style='mso-spacerun:yes'>&nbsp; </span>then the result will be an array of</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>normalized</span> vectors of<span style='mso-spacerun:yes'>&nbsp; </span>type<span style='mso-spacerun:yes'>&nbsp; </span>&quot;double&quot;.<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>Author(s):<span style='mso-spacerun:yes'>&nbsp; </span>Gregory</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>Hance</span></span><span class=GramE>.</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span><span class=GramE><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE>convolve</span></span><span class=SpellE>_Vector</span>(double *<span
class=SpellE>xvecP</span>, double *<span class=SpellE>hvecP</span>, <span
class=SpellE>int</span> <span class=SpellE>xlen</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>hlen</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>xvecP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>input</span></em> <em><span style='font-family:
"Courier New"'>sequence</span></em> <em><span style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>hvecP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>impulse</span></em> <em><span
style='font-family:"Courier New"'>sequence</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>xlen</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>length</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>input</span></em> <em><span style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>hlen</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>length</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>impulse</span></em> <em><span style='font-family:"Courier New"'>vector</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: None.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description: This function performs convolution on <span
class=GramE>two<span style='mso-spacerun:yes'>&nbsp; </span><span class=SpellE>vec</span></span>-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>tors</span></span>.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Author(s):<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Gregory<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>Hance</span>.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>findHisto_Vector</span>(byte *<span
class=SpellE>vecP</span>, <span class=SpellE>int</span> <span class=SpellE>vsize</span>, void *<span
class=SpellE>hP</span>, <span class=SpellE>int</span> l,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>h,<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>CVIP_TYPE<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>dtype</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>vecP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>input</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>vsize</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>size</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>input</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>hP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>histogram</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<em><span
style='font-family:"Courier New"'>l</span></em>&gt; - <em><span
style='font-family:"Courier New"'>expected</span></em> <em><span
style='font-family:"Courier New"'>low</span></em> <em><span style='font-family:
"Courier New"'>value</span></em> <em><span style='font-family:"Courier New"'>in</span></em> <em><span
style='font-family:"Courier New"'>input</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<em><span
style='font-family:"Courier New"'>h</span></em>&gt; - <em><span
style='font-family:"Courier New"'>expected</span></em> <em><span
style='font-family:"Courier New"'>high</span></em> <em><span style='font-family:
"Courier New"'>value</span></em> <em><span style='font-family:"Courier New"'>in</span></em> <em><span
style='font-family:"Courier New"'>input</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>dtype</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>valid</span></em> <span class=SpellE><em><span
style='font-family:"Courier New"'>CVIPtools</span></em></span> <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>type</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: None.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description: This function will <span
class=GramE>find<span style='mso-spacerun:yes'>&nbsp; </span>the</span><span style='mso-spacerun:yes'>&nbsp; </span>histogram<span style='mso-spacerun:yes'>&nbsp; </span>of<span style='mso-spacerun:yes'>&nbsp; </span>an</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>input</span> vector of type CVIP_INTEGER or CVIP_DOUBLE.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Author(s):<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Gregory<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>Hance</span>.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>printHisto_Vector</span>(const char *<span
class=SpellE>fname</span>, void *<span class=SpellE>hP</span>, CVIP_TYPE</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>dtype</span></span>,<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>int</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>l,<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>int</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>h,<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>int</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>skipval</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>fname</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>filename</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>hP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>histogram</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>dtype</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>valid</span></em> <span class=SpellE><em><span
style='font-family:"Courier New"'>CVIPtools</span></em></span> <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>type</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<em><span
style='font-family:"Courier New"'>l</span></em>&gt; - <em><span
style='font-family:"Courier New"'>expected</span></em> <em><span
style='font-family:"Courier New"'>low</span></em> <em><span style='font-family:
"Courier New"'>value</span></em> <em><span style='font-family:"Courier New"'>in</span></em> <em><span
style='font-family:"Courier New"'>input</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<em><span
style='font-family:"Courier New"'>h</span></em>&gt; - <em><span
style='font-family:"Courier New"'>expected</span></em> <em><span
style='font-family:"Courier New"'>high</span></em> <em><span style='font-family:
"Courier New"'>value</span></em> <em><span style='font-family:"Courier New"'>in</span></em> <em><span
style='font-family:"Courier New"'>input</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>skipval</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>value</span></em> <em><span style='font-family:
"Courier New"'>to</span></em> <em><span style='font-family:"Courier New"'>set</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>zero</span></em> <em><span style='font-family:"Courier New"'>when</span></em> <em><span
style='font-family:"Courier New"'>computing</span></em> <em><span
style='font-family:"Courier New"'>histogram</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: None.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description: This function will <span
class=GramE>write<span style='mso-spacerun:yes'>&nbsp; </span>the</span> histogram<span style='mso-spacerun:yes'>&nbsp; </span>of<span style='mso-spacerun:yes'>&nbsp; </span>an</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>input</span> vector of type CVIP_INTEGER or CVIP_DOUBLE to a file.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Author(s):<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Gregory<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>Hance</span>.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> *<span class=SpellE>subSample_Vector</span>(void *<span
class=SpellE>vecP</span>, unsigned<span style='mso-spacerun:yes'>&nbsp; </span>dim,<span style='mso-spacerun:yes'>&nbsp; </span>CVIP_TYPE</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>data_type</span>,<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>unsigned<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>skip,<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>unsigned<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>*<span
class=SpellE>new_dim</span>)</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>******************************************************************</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>vecP</span></em></span></span>&gt; -<em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>input</span></em> <em><span style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>dim</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>dimension</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>input</span></em> <em><span style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>data</span></em>_<em><span
style='font-family:"Courier New"'>type</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>valid</span></em> <span class=SpellE><em><span
style='font-family:"Courier New"'>CVIPtools</span></em></span> <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>type</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>skip</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>elements</span></em> <em><span style='font-family:"Courier New"'>to</span></em> <em><span
style='font-family:"Courier New"'>skip</span></em> <em><span style='font-family:
"Courier New"'>for</span></em> <em><span style='font-family:"Courier New"'>sampling</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>new</span></em>_<em><span
style='font-family:"Courier New"'>dim</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>new</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em> <em><span style='font-family:"Courier New"'>length</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: New sampled vector.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description: This function will produce a vector by sampling</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>every<span style='mso-spacerun:yes'>&nbsp; </span>&lt;</span>skip&gt; element of an input vector. This function will</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>accept<span style='mso-spacerun:yes'>&nbsp; </span><span class=SpellE>CVIPtools</span></span><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE>datatypes</span><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>of<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>CVIP_BYTE,<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>CVIP_SHORT,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>CVIP_INTEGER, CVIP_FLOAT, and CVIP_DOUBLE</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Author(s): Gregory <span
class=SpellE>Hance</span>.</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=GramE>none</span> as of yet</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=SpellE>CVIPvector.h</span>, <span
class=SpellE>CVIPtools</span> library quick reference guide</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Copyright (C) 1992, 1995, 2004 SIUE - by Gregory <span
class=SpellE><span class=GramE>Hance</span></span><span class=GramE><span style='mso-spacerun:yes'>&nbsp; </span>and</span><span style='mso-spacerun:yes'>&nbsp; </span>Scott</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>Umbaugh</span></span><span class=GramE>.</span></pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
