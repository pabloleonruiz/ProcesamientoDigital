<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=UTF-8">
<meta name=ProgId content=FrontPage.Editor.Document>
<meta name=Generator content="Microsoft FrontPage 4.0">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="Band_files/filelist.xml">
<title>Band</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ACADEMIC COMPUTING</o:Author>
  <o:LastAuthor>ACADEMIC COMPUTING</o:LastAuthor>
  <o:Revision>5</o:Revision>
  <o:TotalTime>3</o:TotalTime>
  <o:Created>2004-06-04T02:16:00Z</o:Created>
  <o:LastSaved>2004-07-12T22:37:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>980</o:Words>
  <o:Characters>5592</o:Characters>
  <o:Company>SIUE</o:Company>
  <o:Lines>46</o:Lines>
  <o:Paragraphs>13</o:Paragraphs>
  <o:CharactersWithSpaces>6559</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(49);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../index.htm#page=CVIPlibraries%2FBand.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 


<div class=Section1>

<h2>NAME</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Band - <span class=SpellE>CVIPtools</span> toolkit library for the data handling of</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>multi-spectral</span> imagery</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SYNOPSIS</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>#include &lt;<span
class=SpellE>CVIPband.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>#include &lt;<span
class=SpellE>CVIPimage.h</span>&gt;</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></pre>

<h2>FUNCTIONS</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Band includes the following utilities:</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=SpellE>assemble_bands</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>bandcast</span></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>bandcopy</span></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>band_minmax</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>extract_band</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>matalloc</span></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>matfree</span></span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=SpellE><span class=GramE>vecalloc</span></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>vecfree</span></span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>The C files containing these functions are located under $<span
class=SpellE>CVIPtoolsHOME\CVIPC\BandUtilities</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>DESCRIPTION</h2>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>ASSEMBLE MULTI-SPECTRAL Image FROM MONOCHROME <span
class=SpellE>ImageS</span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>===========================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Image *<span
class=SpellE>assemble_<span class=GramE>bands</span></span><span class=GramE>(</span>Image **<span
class=SpellE>inImgs</span>, <span class=SpellE>int</span> <span class=SpellE>noimgs</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>===========================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>inImgs</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>Pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>array</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>image</span></em> <em><span style='font-family:
"Courier New"'>pointers</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>noimgs</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>image</span></em> <em><span style='font-family:"Courier New"'>pointers</span></em> <em><span
style='font-family:"Courier New"'>contained</span></em> <em><span
style='font-family:"Courier New"'>in</span></em> <em><span style='font-family:
"Courier New"'>the</span></em> <em><span style='font-family:"Courier New"'>array</span></em>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: Pointer to new image structure.<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>Description:<span style='mso-spacerun:yes'>&nbsp; </span>add</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>monochrome</span> image planes to create</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>a</span> <span class=SpellE>multispectral</span> image.<span style='mso-spacerun:yes'>&nbsp; </span>Diagnostics: - Supports</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>COMPLEX data formats.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- If any color images are passed, only their</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>first</span> color band is used.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- Adds history entry for operation.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- Returns NULL if error is encountered.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>CAST DATA BANDS</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=========================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>MATRIX **<span
class=SpellE><span class=GramE>bandcast</span></span><span class=GramE>(</span>MATRIX **<span
class=SpellE>srcBANDS</span>, <span class=SpellE>int</span> <span class=SpellE>no_of_bands</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>CVIP_TYPE <span
class=SpellE>data_type</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=========================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>srcBANDS</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>an</span></em> <em><span style='font-family:"Courier New"'>array</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>MATRIX</span></em> <em><span style='font-family:"Courier New"'>pointers</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>no</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>bands</span></em></span>&gt; - <em><span style='font-family:
"Courier New"'>number</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>spectral</span></em> <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>bands</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>data</span></em>_<em><span
style='font-family:"Courier New"'>type</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>type</span></em> <em><span style='font-family:"Courier New"'>to</span></em> <em><span
style='font-family:"Courier New"'>be</span></em> <em><span style='font-family:
"Courier New"'>promoted</span></em> <em><span style='font-family:"Courier New"'>to</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: pointer to new array of MATRIX <span
class=GramE>pointers<span style='mso-spacerun:yes'>&nbsp; </span>cast</span><span style='mso-spacerun:yes'>&nbsp; </span>into</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>the<span style='mso-spacerun:yes'>&nbsp; </span>specified</span><span style='mso-spacerun:yes'>&nbsp; </span>data<span style='mso-spacerun:yes'>&nbsp; </span>type<span style='mso-spacerun:yes'>&nbsp; </span>Description: cast the data of an</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>image</span> pointed to by &lt;<span class=SpellE>srcBANDS</span>&gt; into<span style='mso-spacerun:yes'>&nbsp; </span>a<span style='mso-spacerun:yes'>&nbsp; </span>more<span style='mso-spacerun:yes'>&nbsp; </span>precise<span style='mso-spacerun:yes'>&nbsp; </span>type.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Diagnostics:<span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>returns<span style='mso-spacerun:yes'>&nbsp; </span>with</span><span style='mso-spacerun:yes'>&nbsp; </span>NULL<span style='mso-spacerun:yes'>&nbsp; </span>pointer and error message</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>when</span> cast cannot be performed.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>COPY DATA BANDS</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=======================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> <span class=SpellE>bandcopy</span>(MATRIX **, MATRIX **, <span
class=SpellE>int</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=======================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>srcBANDS</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>an</span></em> <em><span style='font-family:"Courier New"'>array</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>MATRIX</span></em> <em><span style='font-family:"Courier New"'>pointers</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>desBANDS</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>an</span></em> <em><span style='font-family:"Courier New"'>array</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>MATRIX</span></em> <em><span style='font-family:"Courier New"'>pointers</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>no</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>bands</span></em></span>&gt; - <em><span style='font-family:
"Courier New"'>number</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>spectral</span></em> <em><span
style='font-family:"Courier New"'>data</span></em> <em><span style='font-family:
"Courier New"'>bands</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description: copy the data <span
class=GramE>pointed<span style='mso-spacerun:yes'>&nbsp; </span>to</span><span style='mso-spacerun:yes'>&nbsp; </span>be<span style='mso-spacerun:yes'>&nbsp; </span>&lt;<span
class=SpellE>srcBANDS</span>&gt;<span style='mso-spacerun:yes'>&nbsp; </span>into</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>that</span> of &lt;<span class=SpellE>desBANDS</span>&gt;.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>FIND MIN AND MAX</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=================================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> *<span class=SpellE>band_minmax</span>(MATRIX *const *bands, unsigned <span
class=SpellE>int</span> <span class=SpellE>no_of_bands</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>CVIP_TYPE <span
class=SpellE>data_type</span>, <span class=SpellE>int</span> <span
class=SpellE>bstart</span>, <span class=SpellE>int</span> <span class=SpellE>bstop</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=================================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>bands</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>array</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>MATRIX</span></em> <em><span
style='font-family:"Courier New"'>pointers</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE><em><span style='font-family:"Courier New"'>containing</span></em></span> <em><span
style='font-family:"Courier New"'>image</span></em> <em><span style='font-family:
"Courier New"'>data</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>no</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>bands</span></em></span>&gt; - <em><span style='font-family:
"Courier New"'>number</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>spectral</span></em> <em><span
style='font-family:"Courier New"'>bands</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>data</span></em>_<em><span
style='font-family:"Courier New"'>type</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>type</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>image</span></em> <em><span
style='font-family:"Courier New"'>data</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>bstart</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>starting</span></em> <em><span
style='font-family:"Courier New"'>band</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>bstop</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>stopping</span></em> <em><span
style='font-family:"Courier New"'>band</span></em></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: Pointer to array containing pairs of min.<span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>and<span style='mso-spacerun:yes'>&nbsp; </span><span class=SpellE>and</span></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>max</span>.<span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>values</span>.<span style='mso-spacerun:yes'>&nbsp; </span>Array will have same data type as image data.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description: find the maximum <span
class=GramE>and<span style='mso-spacerun:yes'>&nbsp; </span>minimum</span><span style='mso-spacerun:yes'>&nbsp; </span>values<span style='mso-spacerun:yes'>&nbsp; </span>of<span style='mso-spacerun:yes'>&nbsp; </span>each</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>band<span style='mso-spacerun:yes'>&nbsp; </span>of</span><span style='mso-spacerun:yes'>&nbsp; </span>an<span style='mso-spacerun:yes'>&nbsp; </span>image<span style='mso-spacerun:yes'>&nbsp; </span>from &lt;<span
class=SpellE>bstart</span>&gt; to &lt;<span class=SpellE>bstop</span>&gt;.<span style='mso-spacerun:yes'>&nbsp; </span>Diagnostics:</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>returns</span> NULL pointer w/ error message<span style='mso-spacerun:yes'>&nbsp; </span>if<span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE>bstop</span><span style='mso-spacerun:yes'>&nbsp; </span>&lt;<span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE>bstart</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>etc</span>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>EXTRACT ONE BAND FROM MULTI-SPECTRAL Images</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>==========================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Image *<span
class=SpellE>extract_<span class=GramE>band</span></span><span class=GramE>(</span>Image *<span
class=SpellE>inImg</span>, <span class=SpellE>int</span> <span class=SpellE>bandno</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>==========================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>inImgs</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>Pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>image</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>bandno</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>band</span></em> <em><span style='font-family:
"Courier New"'>number</span></em> <em><span style='font-family:"Courier New"'>to</span></em> <em><span
style='font-family:"Courier New"'>be</span></em> <em><span style='font-family:
"Courier New"'>extracted</span></em> <em><span style='font-family:"Courier New"'>from</span></em> <em><span
style='font-family:"Courier New"'>the</span></em> <em><span style='font-family:
"Courier New"'>image</span></em>.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: Pointer to new image structure.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span>Description: Create a monochrome image from a color</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>image</span> by extracting a color plane.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Diagnostics: - Supports COMPLEX data formats.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- Adds history entry for operation.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>- Returns NULL if error is encountered.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>===============================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> *<span class=SpellE>matalloc</span>( unsigned <span
class=SpellE>int</span> depth, unsigned <span class=SpellE>int</span> rows,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>unsigned</span> <span class=SpellE>int</span> cols, <span
class=SpellE>size_t</span> size );</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>===============================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>depth</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>depth</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>matrix</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>rows</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>rows</span></em> <em><span style='font-family:"Courier New"'>in</span></em> <em><span
style='font-family:"Courier New"'>matrix</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>cols</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>columns</span></em> <em><span style='font-family:"Courier New"'>in</span></em> <em><span
style='font-family:"Courier New"'>matrix</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>size</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>size</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>each</span></em> <em><span
style='font-family:"Courier New"'>matrix</span></em> <em><span
style='font-family:"Courier New"'>element</span></em> (<em><span
style='font-family:"Courier New"'>e</span></em>.<em><span style='font-family:
"Courier New"'>g</span></em>.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>sizeof</span></em></span></span><span
class=GramE>(</span><em><span style='font-family:"Courier New"'>float</span></em>))</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: triple pointer to a new <span
class=GramE>instance<span style='mso-spacerun:yes'>&nbsp; </span>of</span><span style='mso-spacerun:yes'>&nbsp; </span>an<span style='mso-spacerun:yes'>&nbsp; </span>array<span style='mso-spacerun:yes'>&nbsp; </span>of</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>matrices<span style='mso-spacerun:yes'>&nbsp; </span>Description</span>: allocate an array of &lt;depth&gt; matrices</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>each</span> with &lt;rows&gt; rows and &lt;cols&gt; cols with an<span style='mso-spacerun:yes'>&nbsp; </span>element<span style='mso-spacerun:yes'>&nbsp; </span>size</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>of<span style='mso-spacerun:yes'>&nbsp; </span>&lt;</span>size&gt;.<span style='mso-spacerun:yes'>&nbsp; </span>NOTE: use <span
class=SpellE><span class=GramE>matfree</span></span><span class=GramE>(</span>...) to free the matrix <span
class=SpellE>Diag</span>-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>nostics</span></span>: returns NULL pointer w/ corresponding error message</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>upon</span> memory allocation failure.</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=====================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> <span class=SpellE>matfree</span>(void *<span
class=SpellE>matP</span>, unsigned <span class=SpellE>int</span> <span
class=SpellE>no_of_planes</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=====================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>matP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>matrix</span></em> <em><span style='font-family:"Courier New"'>allocated</span></em> <em><span
style='font-family:"Courier New"'>w</span></em>/ <span class=SpellE><em><span
style='font-family:"Courier New"'>matalloc</span></em></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>number</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>planes</span></em></span>&gt; - <em><span style='font-family:
"Courier New"'>depth</span></em> <em><span style='font-family:"Courier New"'>of</span></em> <em><span
style='font-family:"Courier New"'>matrix</span></em> (<em><span
style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE><em><span style='font-family:"Courier New"'>data</span></em></span> <em><span
style='font-family:"Courier New"'>bands</span></em>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description: free the memory associated with a <span
class=GramE>matrix<span style='mso-spacerun:yes'>&nbsp; </span><span class=SpellE>allo</span></span>-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>cated</span></span> by <span class=SpellE>matalloc</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>MEMORY MANAGEMENT</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>===============================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> *<span class=SpellE>vecalloc</span>( unsigned <span
class=SpellE>int</span> <span class=SpellE>no_of_vecs</span>, unsigned <span
class=SpellE>int</span> <span class=SpellE>vdim</span>,</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>size_t</span></span> size );</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>===============================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>no</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>vecs</span></em></span>&gt; - <em><span style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>vectors</span></em> <em><span style='font-family:"Courier New"'>to</span></em> <em><span
style='font-family:"Courier New"'>allocate</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>vdim</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>dimension</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>each</span></em> <em><span style='font-family:"Courier New"'>vector</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span>&lt;<span
class=GramE><em><span style='font-family:"Courier New"'>size</span></em></span>&gt; - <em><span
style='font-family:"Courier New"'>size</span></em> <em><span style='font-family:
"Courier New"'>of</span></em> <em><span style='font-family:"Courier New"'>each</span></em> <em><span
style='font-family:"Courier New"'>vector</span></em> <em><span
style='font-family:"Courier New"'>element</span></em> (<em><span
style='font-family:"Courier New"'>e</span></em>.<em><span style='font-family:
"Courier New"'>g</span></em>.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>sizeof</span></em></span></span><span
class=GramE>(</span><em><span style='font-family:"Courier New"'>float</span></em>))</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Returns: double pointer to a new <span
class=GramE>instance<span style='mso-spacerun:yes'>&nbsp; </span>of</span><span style='mso-spacerun:yes'>&nbsp; </span>an<span style='mso-spacerun:yes'>&nbsp; </span>array<span style='mso-spacerun:yes'>&nbsp; </span>of</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>vectors</span>.<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>Description:<span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>allocate<span style='mso-spacerun:yes'>&nbsp; </span>an</span><span style='mso-spacerun:yes'>&nbsp; </span>array of &lt;<span
class=SpellE>no_of_vecs</span>&gt;</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>vectors</span> each of size &lt;<span class=SpellE>vdim</span>&gt; with an element size of <span style='mso-spacerun:yes'>&nbsp;</span>&lt;size&gt;.</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>NOTE:<span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>use<span style='mso-spacerun:yes'>&nbsp; </span><span class=SpellE>vecfree</span></span>(...)<span style='mso-spacerun:yes'>&nbsp; </span>to<span style='mso-spacerun:yes'>&nbsp; </span>free<span style='mso-spacerun:yes'>&nbsp; </span>the<span style='mso-spacerun:yes'>&nbsp; </span>vector Diagnostics:</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>returns</span> NULL pointer w/<span style='mso-spacerun:yes'>&nbsp; </span>corresponding<span style='mso-spacerun:yes'>&nbsp; </span>error<span style='mso-spacerun:yes'>&nbsp; </span>message<span style='mso-spacerun:yes'>&nbsp; </span>upon</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>memory</span> allocation error</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=====================================================</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>void</span> <span class=SpellE>vecfree</span>(void *<span
class=SpellE>vecP</span>, unsigned <span class=SpellE>int</span> <span
class=SpellE>no_of_vecs</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>=====================================================</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><span class=GramE><em><span style='font-family:"Courier New"'>vecP</span></em></span></span>&gt; - <em><span
style='font-family:"Courier New"'>pointer</span></em> <em><span
style='font-family:"Courier New"'>to</span></em> <em><span style='font-family:
"Courier New"'>vector</span></em> <em><span style='font-family:"Courier New"'>allocated</span></em> <em><span
style='font-family:"Courier New"'>w</span></em>/ <span class=SpellE><em><span
style='font-family:"Courier New"'>vecalloc</span></em></span></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&lt;<span
class=SpellE><em><span style='font-family:"Courier New"'>number</span></em>_<em><span
style='font-family:"Courier New"'>of</span></em>_<em><span style='font-family:
"Courier New"'>vecs</span></em></span>&gt; - <em><span style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em> <em><span style='font-family:
"Courier New"'>vectors</span></em> (<em><span style='font-family:"Courier New"'>number</span></em> <em><span
style='font-family:"Courier New"'>of</span></em></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE><em><span style='font-family:"Courier New"'>data</span></em></span> <em><span
style='font-family:"Courier New"'>bands</span></em>)</pre><pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Description: free the memory associated with a <span
class=GramE>vector<span style='mso-spacerun:yes'>&nbsp; </span><span class=SpellE>allo</span></span>-</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>cated</span></span> by <span class=SpellE>vecalloc</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>BUGS</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=GramE>none</span> as of yet</pre><pre><o:p>&nbsp;</o:p></pre>

<h2>SEE ALSO</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=SpellE>CVIPtools</span></pre><pre><o:p>&nbsp;</o:p></pre>

<h2>AUTHOR</h2>

<pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Copyright (C) 1992, 1993, 1997, 2004 SIUE - by <span
class=GramE>Gregory<span style='mso-spacerun:yes'>&nbsp; </span><span class=SpellE>Hance</span></span><span style='mso-spacerun:yes'>&nbsp; </span>and</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Scott <span
class=SpellE>Umbaugh</span>.</pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
